-- phpMyAdmin SQL Dump
-- version 4.6.6deb5ubuntu0.5

--
-- Database: `ricercaPdfFile`
--
-- email:anielle.gomes@edu.itspiemonte.it => password: test
-- anielle@gmail.com => password: its

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `email` varchar(100) NOT NULL,
  `password` varchar(1200) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`email`, `password`) VALUES
('anielle.gomes@edu.itspiemonte.it', '$2y$10$rbJCSYxLmzsnAHeoZenF3u/ZUekM6tFCqejBRe.8bfwagkU.nN2se'),
('anielle@gmail.com', '$2y$10$mLxg0XSg65WOJ9UE.wBRMe4lt.HMHX96GqT5M89bFnDQafwOCgvry');


--
-- Table structure for table `files`
--

CREATE TABLE `files` (
  `id` int(11) NOT NULL,
  `filename` varchar(200) NOT NULL,
  `content` longtext NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `files`
--

INSERT INTO `files` (`id`, `filename`, `content`) VALUES
(1, 'git.pdf', 'An introduction to Git and GitHub\nProf. Andrew C.R. Martin, University College London November, 2018\nThis self-paced tutorial will take you through the basic use o f Git and GitHub.\nThese are systems that allow you to maintain code and work that you are doing,\ntrack changes, recover old versions and collaborate with ot her people. There are\nmany tutorials available on the Web or in books. I use this stylefor com-\nmands you type, and	\nthis style	for ï¬lenames. In places I use this styleor\nTHIS STYLE for things that should be substituted with an appropriate ï¬l ename\nor word.\nContents \n1 Introduction â€” what are Git and GitHub? 2\n2 Installing Git 3\n2.1 If you are using Linux. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3 \n2.2 If you are using a Mac. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3\n2.3 If you are using Windows. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3\n3 Getting started on GitHub 3\n4 Conï¬guring Git 5\n5 Creating a Git repository 5\n6 Creating and editing ï¬les 6\n7 Adding ï¬les to your Git repository 7\n8 Finding out whatâ€™s happening 7\n9 Making changes and tracking them 8\n10 Synchronizing your local Git repository with GitHub 9 \n11 Deleting and renaming ï¬les 10\n1\n\n12 Undoing changes10\n12.1 Before you commit... . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10\n12.2 After you commit... . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1 1\n12.3 Being more selective . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12\n12.4 Retrieving an old version . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13\n13 Branching 13\n13.1 Checking differences between branches . . . . . . . . . . . . . . . . . . . 14\n13.2 Merging branches . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15\n13.3 Deleting branches . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15\n14 Tags and releases 16\n14.1 Summarizing your changes . . . . . . . . . . . . . . . . . . . . . . . . . . 1 7\n15 Downloading a repository 17\n16 Managing multiple copies of a repository 18\n16.1 Dealing with simple conï¬‚icts . . . . . . . . . . . . . . . . . . . . . . . . . 18\n16.2 Dealing with more complex conï¬‚icts . . . . . . . . . . . . . . . . . . . . . 20\n17 Summary 22\n18 Command summary 23\n18.1 Creating a local git repository . . . . . . . . . . . . . . . . . . . . . . . . . 23\n18.2 Synchronizing your local repository with GitHub . . . . . . . . . . . . . 23\n18.3 Changing and adding ï¬les . . . . . . . . . . . . . . . . . . . . . . . . . . . 23\n18.4 Looking at differences . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23\n18.5 Check out a repository from GitHub . . . . . . . . . . . . . . . . . . . . . 2 4\n18.6 Creating branches for developing and testing new features . . . . . . . . 24\n18.7 Undoing changes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 4\n18.8 Tags and releases . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25\n19 Other tutorials 25\n1 Introduction â€” what are Git and GitHub? \nHow many times have you written a document â€” an essay perhaps â€” wher e you\nthink you have got to your ï¬nal version and called it	\nEssayFinal	, only to read through\nit again and spot some errors, so you rename it	\nEssayFinal2	. Perhaps itâ€™s a disserta-\ntion and you give it to your supervisor who has some comments so you e nd up with	\nEssayFinalRevised	. Perhaps you now realise itâ€™s too long so delete some stuff and\ncreate	\nEssayFinalRevisedCut	. Then you read it again and realise that you really need\nto add something back from an earlier version as it no longer mak es sense â€” Oh!\nWait. . . Did you keep that earlier version? Git is designed to deal with exactly this sort of situation. Unfortunate ly it doesnâ€™t\nwork that well with â€˜binaryâ€™ ï¬les like the	\n.doc	or	.docx	ï¬les that Word uses, but for\nplain text ï¬les of the sort you use for writing programs and scripts , or ï¬les that you\nuse with LaTeX (the typesetting system used to write these tutorials), it rem oves these\n2\n\nsorts of problems completely. Whatâ€™s more, you can synchronizegit with GitHub on\nthe web giving you a backup of what you have done, allowing you to c ollaborate with\nothers and to publish what you have done to share it with the outside wor ld. Some\njournals (such as F1000) are even requiring that people who write p apers describing\ncode deposit it in GitHub. If you write code to do your research, you can ensure that\nyou tag your code in GitHub with a version number so that when you publis h your\nresearch you can tie it to a speciï¬c version of the code allowing y ou (and others) to\nrecover exactly the version of code that was used to create your results .\nGit and GitHub are separate things, but linked. Git is the software tha t runs on\nyour computer and manages your ï¬les. You donâ€™t need to use it with GitHub . GitHub\nis an online platform that allows you to synchronise your local Gi t reporitory onto the\nweb. You can also use GitHub to browse other peopleâ€™s repositories a nd download\ncode or documents without ever using Git. \n2 Installing Git \n2.1 If you are using Linux. . . \nYou probably have Git installed already â€” try typing \ngit --version\nat the command line and see if it returns a version number. If it say s the command\nis not found, use your package manager to install it. If you are using a RedHat style\ndistribution (RedHat, CentOS or Fedora), type\nsudo yum -y install git\nor on the newer distributions\nsudo dnf -y install git \nIf you are using a Debian-based distribution such as Ubuntu, then type \nsudo apt-get git \n2.2 If you are using a Mac. . . \nGo to	\ngit-scm.com/download/mac	and download and install the Git package. The\ndownload should start automatically. \n2.3 If you are using Windows. . . \nGo to	\ngitforwindows.org	and download and install the Git-bash package. You have\nprobably already done this for the command line tutorial. \n3 Getting started on GitHub \nThe ï¬rst thing you need to do is create yourself a GitHub account. Since you are a\nstudent, you can create yourself a student account. GitHub is free to use pro viding\nyou are happy to make all your repositories public. If you want pri vate repositories\nyou have to pay unless you are a student or an academic in which case you can have\nfree private accounts.\n3\n\nTask: \nGo to	\nwww.github.com	and create an account. You probably want to select a fairly memorable\n(and sensible!) user name â€” ideally this is something that yo u will continue to use throughout\nyour career.	\nAs explained in the Introduction, one of the main things you will wan t to do with\nGitHub is synchronize your local repository with it. GitHub requires y ou to log in\nwith your username and password. This would be rather a nuisance if e verytime you\nwanted to synchronize your local Git repository with GitHub you had to specify your\nusername and password. Fortunately a mechanism is provided to all ow you to avoid\nthis 1\n. First you need to create yourself what is known as an SSH key:\n1: Type the following:	\ncd\nmkdir .ssh\ncd .ssh\nssh-keygen	\nssh-keygenwill probably ask you where you want to save the key. Simply pres s\nthe Return key to accept the default. ssh-keygen will then ask you to enter a passphrase. Simply press the Return\nkey so that no passphrase is generated. You will then have to press the Return key a\nsecond time to conï¬rm your (empty) passphrase.\nNow if you type ls, you should ï¬nd that you have two ï¬les called	\nid_rsa	(your\nprivate key) and	\nid_rsa.pub	(your public key). Display your public key:\n2: Type the following:	\ncat id_rsa.pub	\n1This relies on using a public/private key pair for authentic ation. This is the same sort of thing\nthat is done for encrypting your bank details when you send th em over the web. Take a look at	\nen.\nwikipedia.org/wiki/Public- key_cryptography	\nif you want to know more\n4\n\nTask:â€¢In GitHub, click the menu item at the top right (it may be a pict ure of you if you have added\na proï¬le picture) and choose Settingsfrom the menu.\nâ€¢ Select SSH and GPG keys from the menu on the left.\nâ€¢ Click New SSH key towards the top right\nâ€¢ Enter a title for your SSH key in the box â€” this can be anything y ou like, but probably\nsomething that identiï¬es the computer you are using (e.g. An drewâ€™s Windows laptop)\nâ€¢ Cut and paste the whole of the public key that you displayed a m oment ago (the content\nof	\nid_rsa.pub	) into the Keybox.\nâ€¢ If you are using a Mac, use:	\npbcopy < ~/.ssh/id_rsa.pub\nto get the public key into your clipboard so you can paste it in to GitHub.\nâ€¢ Click Add SSH key at the bottom of this section of the web page.	\n4 Conï¬guring Git \nYou need to type two lines to conï¬gure Git and link it to GitHub.\nIn the following commands:\nâ€¢ Replace USERNAME with the username that you created on GitHub\nâ€¢ Replace EMAILwith your email address\n3: Type the following:\ngit config --global user.name \"USERNAME\"\ngit config --global user.email \"EMAIL\"\n5 Creating a Git repository \nWhen you use Git, you create one repository for each program or pro ject that you\nwork on. I suggest that you create all your Git repositories under a s ingle directory\ncalled	\ngit	. Letâ€™s start by creating this directory:\n4: Type the following:	\nmkdir ~/git	\n5\n\nCommand Effect\nEscEnter command mode\ni Insert text at cursor\nA Move to end of line and insert text\nr Replace a single character under the cursor\nR Overwrite characters\n:w Write the ï¬le\n:q Quit the editor\n:wq Write the ï¬le and quit the editor	\nTable 1: The most useful vimcommands.\nNow you need to create a directory for your project repository and e nter that di-\nrectory. For this tutorial we will call it	\nGitExercise	:\n5: Type the following:	\ncd ~/git\nmkdir GitExercise\ncd GitExercise\nNote that it is a good idea to avoid spaces in directory (and ï¬le) names since you will\nhave to put the name in inverted commas or escape each of the spaces w ith a backslash\nwhich can be a real nuisance! We now need to tell Git that this is a Git repository:\n6: Type the following:\ngit init\n6 Creating and editing ï¬les \nA text editor is a program that allows you to create and edit a simple plain text ï¬le.\nThings like Word allow you to embed information about fonts, font- size, colour, bold,\nitalics, etc. A text editor simply deals with the plain characters â€” s ome text editors\nmay display text in colour while you are working on it (for examp le to highlight syn-\ntax while writing a computer program) but this information is not sav ed. Under Win-\ndows, you can use NotePad(ensure you save as a â€˜plain ASCII text ï¬leâ€™), but other\nfreely-available editors include Atomandvim (also known as vi). On the Mac, choices\ninclude TextEdit orvim .\nvim is built into the git-bash environment, but is rather old-fashioned and not easy\nto use â€” its advantage is it is available in every unix-like environ ment and lots of\nprgrammers really like it because it is very fast to start and pre tty powerful. It is also\nthe default editor that Git will use if it expects you to provide infor mation about a\nchange you have made 2\n. vim has a â€˜command modeâ€™ and a â€˜text-entry modeâ€™. When\nvim starts, it will be in command mode. To add text, move around using the a rrow\nkeys. To start entering text at the cursor, press the ikey (for insert) and start typing.	\n2\nYou can change the editor that Git uses by giving the command\ngit config --global core.editor \" editor\"\nreplacing editorwith the editor you wish to use.\n6\n\nWhen you are done press theEsckey to return to command mode. To exit the editor,\npress Escto ensure you are in command mode, then type :wqTable 1 summarizes\nthe most useful commands. \n7 Adding ï¬les to your Git repository \nLetâ€™s start by creating a ï¬le to contain some information about protei ns.\nTask: \nUse a text editor to create a ï¬le in yourâˆ¼	\n/git/GitExercise/	directory called	proteins.txt	\ncontaining the following text:\nLysozyme Chicken LYSC_CHICK P00698\nLysozyme Human LYSC_HUMAN P61626\nHemoglobin-alpha Human HBA_HUMAN P69905\nHemoglobin-beta Human HBB_HUMAN P68871	\nExit your editor and tell Git that you want to track this ï¬le:\n7: Type the following:	\ngit add proteins.txt\nYou only need to do this when you have a new ï¬le that you want to track w ith Git.\nHaving speciï¬ed that the ï¬le should be tracked, we need to tell Git tha t we have\nmade changes to the ï¬le that we want it to record:\n8: Type the following:\ngit commit -a -m \"Initial version\"\nStrictly in this case the-aisnâ€™t needed, but it will be whenever you do this in future\nso we will put it in 3\n. The -mspeciï¬es the text that follows in double-inverted commas\nis a comment (or message) brieï¬‚y explaining what changes were made in this vers ion.\nIf you forget to supply a message with -mthen you will enter the ( vim) where you\ncan enter text (See the notes above). \n8 Finding out whatâ€™s happening \nTo ï¬nd out whether there are any ï¬les that are not being tracked by Gi t or whether\nthere are ï¬les that are being tracked that havenâ€™t been committed:\n9: Type the following:\ngit status	\n3The -atells Git to add the changes in this ï¬le to those that are being tracked bycommit. You\nalready did that with git addwhich is always needed for a new ï¬le.\n7\n\nHaving just committed your changes, you should receive the message:	\nOn branch master \nnothing to commit, working directory clean	\nLetâ€™s create another ï¬le that isnâ€™t being tracked just to see what happens:\n10: Type the following:	\ntouch foo.txt\ngit status\nThe touch command is used to set the date and time on a ï¬le to the current date and\ntime. If the ï¬le doesnâ€™t exist, it creates it, so we are just using this to create an empty\nï¬le. This time the output from git statusshould look something like:\nOn branch master \nUntracked files:\n(use \"git add <file>...\" to include in what will be committed )\nfoo.txt\nnothing added to commit but untracked files present (use \"gi t add\" to track)\nGit warns you that there are ï¬les present that arenâ€™t being tracked. Since we only\ncreated this ï¬le as a test, letâ€™s delete it again:\n11: Type the following:\nrm foo.txt	\nWe can also list what commits have been made:\n12: Type the following:	\ngit log\nThis will list all the commits you have made with the comments that yo u speciï¬ed\nwith -m. The	\ncommit	line in the output will be followed by a random string of char-\nacters â€” something like	\nb5526a8ddb40925e01620e751ecc97b735464444	. Donâ€™t worry\nabout this for now; you will ï¬nd out why it is useful in a minute. \n9 Making changes and tracking them	\nTask: \nEdit your	\nproteins.txt	ï¬le by adding a couple of extra lines to the end of the ï¬le. For e xample:	\nPFKM Human PFKAM_HUMAN P08237\nPfkm Mouse PFKAM_MOUSE P47857	\n8\n\nNow if we check the status we will be told that one of the ï¬les has been modiï¬ed:\n13: Type the following:	\ngit status\nYou should see something like:\nOn branch master \nChanges not staged for commit: (use \"git add <file>...\" to update what will be committed)\n(use \"git checkout -- <file>...\" to discard changes in worki ng directory)\nmodified: proteins.txt\nno changes added to commit (use \"git add\" and/or \"git commit - a\")	\nWe now have to commit the changes so that Git keeps track of them.\n14: Type the following:	\ngit commit -a -m \"Added information on PFKM\"\ngit log	\nLooking at the output fromgit logyou should now see that there is a log mes-\nsage for your changes. \n10 Synchronizing your local Git repository with GitHub \nTo synchronize your local repository with GitHub, proceed as foll ows:\nâ€¢ Go to the	\nGitHub.com	web site and make sure you are logged in,\nâ€¢ In the top right corner, you should ï¬nd a +sign. Click this and then click New\nrepository ,\nâ€¢ Enter the name of your repository (	\nGitExercise	),\nâ€¢ Add a description of your repository â€” something like â€œGit Exerci seâ€,\nâ€¢ Do not select the option to â€œInitialize this repository with a READMEâ€,\nâ€¢ Click the button to create the repository.\nThese steps have created an empty repository on GitHub; you now need to syn-\nchronize your local repository with this. Replace USERNAME with your GitHub username in the following.\n15: Type the following:	\ngit remote add origin git@github.com:USERNAME/GitExerci se.git\ngit push -u origin master	\nIf you make a mistake in this command (such as not using the corrent us ername\nor repository name), you can delete the remote repository and start again with\ngit remote remove origin\n9\n\nTask: \nRefresh the GitHub web page â€” you should now ï¬nd that your	\nproteins.txt	ï¬le is listed on\nthe page. You should also see that there have been 2 commits re ï¬‚ecting what you did on the\ncommand line.	\nFrom now on, after you make and commit changes, all you need to do isgit push\n(without the -u origin master ) to â€˜pushâ€™ your changes onto GitHub.\n11 Deleting and renaming ï¬les \nNormally you would delete a ï¬le with rmand rename or move a ï¬le using mv. How-\never, we also need to tell Git that we have deleted, renamed or move d a ï¬le. To do that\nwe have to remember to delete, rename or move the ï¬le via Git. Do not do this now , but if, for example, we wished to rename our	\nproteins.txt	\nï¬le to	proteininfo.txt	we would do:\ngit mv proteins.txt proteininfo.txt \nSimilarly to delete a ï¬le and stop Git from tracking it we would do:\ngit rm proteins.txt \n12 Undoing changes \n12.1 Before you commit... \nLetâ€™s add something else to the	\nproteins.txt	ï¬le, but something that was clearly a\nmistake.	\nTask: \nEdit the	\nproteins.txt	ï¬le and add the following line to the end of the ï¬le:	\nThis is clearly a mistake!	\nIf you now type git statusyou will be told that the ï¬le has been changed, but\nthat you havenâ€™t committed the changes yet. At this stage, you can go b ack to the\nversion without the changes:\n16: Type the following:	\ngit checkout -- proteins.txt\ncat proteins.txt	\n10\n\nAs you will see, the ï¬le has reverted back to what it was before youadded the lines.\nIf you have modiï¬ed more than one ï¬le and want to reset everything to the last\ncommit, you can also do \ngit reset --hard\nto reset all the ï¬les. \n12.2 After you commit... \nSuppose however that you have committed a change and now want to undo that\nchange and revert to the previous version. You will recall that wh en you usegit log\nyou are shown the comments, but also shown lines saying	\ncommit	with some appar-\nently random set of letters and numbers. This is an identiï¬er for a p articular commit.\nWe can use git revert with one of these identiï¬ers to remove the changhed that\nhappened in that commit. In practice, you only need about the ï¬rst 6 or 7 characters\nof the commit identiï¬er to identify a particular commit uniquely.\nAgain add something to the	\nproteins.txt	ï¬le that we will clearly wish to undo.	\nTask: \nEdit the	\nproteins.txt	ï¬le and add the following line to the end of the ï¬le:	\nThis is clearly another mistake!	\nNow commit the change and look at the Git log:\n17: Type the following:	\ngit commit -a -m \"I added a mistake on purpose\"\ngit log\nTask: \nRecord the ï¬rst 6 or 7 characters of most recent	\ncommit	message (at the top of the log) which\nis associated with the erroneous commit.	\nFor example, my Git log looks something like:	\ncommit adbd940940ba3f1584d3bd77c4b048e2b0fcda3f \nAuthor: AndrewCRMartin <andrew@bioinf.org.uk>\nDate: Thu Sep 28 12:39:37 2017 +0100\nI added a mistake on purpose\ncommit 54f0e41a1c772dbde9002ab1252c634c6296ec77\nAuthor: AndrewCRMartin <andrew@bioinf.org.uk>	\n11\n\nDate: Thu Sep 28 11:16:08 2017 +0100Added information on PFKM	\nI can now return to the previous version by â€˜revertingâ€™ the latest comm it which\ncontained the error:\n18: Type the following:	\ngit revert adbd940\n(when you do this, replaceadbd940with whatever is appropriate from your Git log).\nNote that the commit number that you supply is the one that you w ant to undo, not the one\nyou want to get back to! The screen will change to a message saying:\nRevert \"I added a mistake on purpose\" \nThis reverts commit adbd940940ba3f1584d3bd77c4b048e2b0 fcda3f.\n# Please enter the commit message for your changes. Lines sta rting\n# with â€™#â€™ will be ignored, and an empty message aborts the com mit.\n# On branch master \n#\n# Changes to be committed:\n# modified: proteins.txt\n#\nYou have entered the vimtext editor (see Section 6 and Table 1.) where you can add\nother comments about the change, but we will simply accept the defaul t message by\npressing the Esckey and typing the characters: :wq(colon, â€˜wâ€™, and â€˜qâ€™) 4\nIf you now look at the	\nproteins.txt	ï¬le, you should ï¬nd that the changes have\ngone and we have returned to the ï¬le as it was. Now push your changes to GitHub â€” you committed a change and then reverte d\nit which is effectively another commit. Git tracks everything, so even your mistake is\ntracked and can be got back again if needed:\n19: Type the following:	\ngit push	\nNOTE!git revert can be used to undo any commit â€” not just the most recent\none. You simply specify the relevant commit identiï¬er. \n12.3 Being more selective \nYou can also undo a change to an individual ï¬le rather than all the ï¬le s that were\nchanged in a commit. We wonâ€™t look at an example here, but just exp lain what you\nneed to do.\n4 Pressing the Esckey ensures you are in command mode and :wqmeans write the ï¬le and quit.\n12\n\nTo obtain an older version of a particular ï¬le, you can use the command:\ngit checkout commitid -- filename\nwhere commitid is the commit identiï¬er of the version that we want to keep (i.e. the\ncommit containing the last good version of the ï¬le) and filenameis the ï¬lename of\nthe ï¬le you want to obtain. Having done this you would also need to com mit the\nchanges in the usual way with git commit.\n12.4 Retrieving an old version \nTo get back to an older version in the log history without actually undo ing the changes\nbetween that version and the current version, we use the git checkoutcommitid\ncommand where commitidis the commit identiï¬er of the version that you want to\ngo back to. You can then create a new branch starting from that point ( see Section 13,\nbelow). To return to the latest commit, simply type git checkout master.	\nTask: \nGive it a try. Go back to the original commit, take a look at the	\nproteins.txt	ï¬le and then\nreturn to the latest version.	\n13 Branching \nOften we ï¬nd that we have a version of a program (or script) that we a re happy with,\nbut we want to add some new feature(s). Whenever we make changes we risk break-\ning the existing version. Git allows us to create experimental â€˜bra nchesâ€™ where we can\ndevelop new features before merging them back into the master repos itory.\nThis is also useful when we have multiple people working on a proje ct. Each per-\nson creates a branch for the feature or bug-ï¬x they are working on and when they are\nï¬nished they merge it back into the master branch. Suppose we want to modify our proteins ï¬le to include the length of each protein.\nAdding that extra ï¬eld to the ï¬le might well break some program that relied on the\nï¬le, so we will do it in a new branch called â€˜protlengthâ€™. We create a new branch using\ngit checkout -b branchname\n(where -btells checkout to create a new branch):\n20: Type the following:\ngit checkout -b protlength\nThis has created a new branch and switched to using that branch. You can conï¬rm\nwhich branch you are currently using:\n21: Type the following:\ngit branch	\n13\n\nThe â€˜master â€™ branch is the default branch that we were using previously.\nIf we are using GitHub, we need to tell Git to link this new branch to GitHub . We\ndo this with the command 5\n:\n22: Type the following:\ngit push -u origin protlength	\nWe can now make our experimental changes to	proteins.txt	.	\nTask: \nEdit	\nproteins.txt	to add the protein lengths:	\nLysozyme Chicken LYSC_CHICK P00698 147 \nLysozyme Human LYSC_HUMAN P61626 148\nHemoglobin-alpha Human HBA_HUMAN P69905 142\nHemoglobin-beta Human HBB_HUMAN P68871 147\nPFKM Human PFKAM_HUMAN P08237 780\nPfkm Mouse PFKAM_MOUSE P47857 780	\nOnce we have made our changes, we commit them and push them to GitHub: 23: Type the following:	\ngit commit -a -m \"Added protein lengths\"\ngit push	\nIf we wish to return to the â€˜master â€™ branch we can do so with:24: Type the following:	\ngit checkout master\nNow take a look at	proteins.txt	â€” you will see that it no longer has the protein\nlengths. Return to the â€˜protlengthâ€™ branch:\n25: Type the following:	\ngit checkout protlength\nand verify that	proteins.txt	now has the protein length information.\n13.1 Checking differences between branches \nJust as we can use diffto look at the differences between ï¬les, we can use git diff\nto look at differences between branches or commits:	\n5 You may remember that when you ï¬rst synchronized with GitHub y ou had to type\ngit push -u origin master . That was telling Git to link the â€˜master â€™ branch with a serve r called\nâ€˜originâ€™ which is the GitHub web site (we speciï¬ed that in Sect ion 10 withgit remote add origin ;\nnow we are synchronizing a different branch with â€˜originâ€™.\n14\n\n26: Type the following:	\ngit diff master\nThis will show us the differences between the current (â€˜protlengthâ€™) branch and the\nâ€˜master â€™ branch. If we use git diff by itself (with no following parameter), it will show us differ-\nences from the most recent commit. We can also use git diffwith a commit identiï¬er to see the differences between\nthe current version and a speciï¬ed commit or with two commit identi ï¬ers to see the\ndifferences between two speciï¬c commits. In any of these cases, if you are only interested in a particular ï¬le , just add the\nï¬lename on the end as well. \n13.2 Merging branches \nLetâ€™s suppose we are now happy with our changes in the â€˜protlengthâ€™ br anch and want\nto merge it into the main (â€˜master â€™) branch. We simply check out the â€˜ master â€™ branch\nand merge in the â€˜protlengthâ€™ branch:\n27: Type the following:\ngit checkout master\ngit merge protlength	\nIf you made a mistake somewhere and this doesnâ€™t work, you may ne ed to do:	\ngit add proteins.txt \ngit commit -m \" \"	\nThe merge is automatically committed, but we need to push the merged â€˜ma ster â€™\nbranch back to GitHub:\n28: Type the following:	\ngit push	\nAgain take a look at	proteins.txt	to conï¬rm that it now conains the protein length\ninformation. \n13.3 Deleting branches \nHaving developed our new feature in the â€˜protlengthâ€™ branch and mer ged it into the\nmain â€˜master â€™ branch, we can delete â€˜protlengthâ€™ branch. Quite ofte n people will work\nwith a development branch locally and not bother pushing it to GitH ub since it is\ndevelopment stuff that they donâ€™t want to share. This isnâ€™t always the case because\n(as we will see later) they may be working across multiple machine s (perhaps a laptop\nand a desktop machine) and using GitHub to keep the systems in synchro nization.\nTo delete the â€˜protlengthâ€™ branch on the local machine, all thatâ€™s ne eded is:\n29: Type the following:	\ngit branch -d protlength\nTo delete the branch on GitHub as well, we need the following two extra commands:\n15\n\n30: Type the following:	\ngit push origin --delete protlength\ngit remote prune origin\n14 Tags and releases \nWe have already encountered the rather long-winded identiï¬ers that are used to la-\nbel particular commits. However it would be much nicer for particula r versions â€”\nperhaps those that we release to other people or those that we have use d for the anal-\nysis that we publish in a paper â€” to be able to tag them with a much simpler label,\ntypically a version number. When we have a particular version checked out, we can tag it as follo ws:\n31: Type the following:\ngit tag v1.0\ngit push --tags\nThe ï¬rst command speciï¬es the tag that you wish to use for this versio n. You can\nchoose whatever tag you like, but â€˜v1.0â€™ is probably a sensible o ption. The second\ncommand makes sure that GitHub knows about the tag too. On GitHub, we can then create a â€˜releaseâ€™ of our repository. A releas e provides a\nZIP ï¬le and a gzipped tar ï¬le that people can download. To do this, f ollow these steps:\n1. Visit your repository on GitHub \n2. Once you have created a tag (â€˜v1.0â€™) and pushed it to GitHub as desc ribed above,\nyou should see the text 1 releaseabove the list of ï¬lenames in the repository.\nClick this text.\n3. You will be taken to a screen where it lists the v1.0 release and o n the right you\nwill see a button labelled Draft a new release. Click this button.\n4. Click in the box with the faint text â€˜Tag versionâ€™ and type the tag yo u have used\nâ€” as soon as you start typing the letter â€˜vâ€™ it should list your tag and yo u can\nclick on it.\n5. Enter a title for your release in the â€˜Release titleâ€™ box â€” something like â€œFirst\nrelease versionâ€\n6. In the box below you can type some information about this release . Typically for\na ï¬rst release this again will be something like â€œï¬rst releaseâ€ , but for subsequent\nversions you might provide a list of the changes since the previ ous version. A\nmethod for obtaining this is described below in Section 14.1.\n7. Click the Publish release button at the bottom of the page.\nGitHub will now return to the releases page which provides links whe re you can\ndownload the code as a ZIP ï¬le or gzipped tar ï¬le 6\n.	\n6Note that these are not Git repositories, they are simply cop ies of the ï¬les as present in that tagged\ncommit.\n16\n\n14.1 Summarizing your changes \nThegit shortlog command gives you the commit messages (the comments you\nprovided with the -moption to git commit ) without all the other information:\n32: Type the following:\ngit shortlog	\nYou can also obtain only the commit messages between two particular commits:\ngit shortlog commitid1..commitid2\nThe version that you have currently checked out can be abbreviated asHEAD so to\nï¬nd the changes between a particular commit and the current version , you can use:\ngit shortlog commitid..HEAD\nAs usual tags are abbreviated ways of accessing commit identiï¬ers , so if you have\ncreated a tag for a particular version, you can use the tag name instead of the commit\nidentiï¬er: \ngit shortlog tag..HEAD\nConsequently, when you create a new release (say â€˜v1.1â€™), you ca n obtain the\nchanges from the previous release (say â€˜v1.0â€™) with:\ngit shortlog v1.0..HEAD \n15 Downloading a repository \nYou are now going to download a second copy of your repository fro m GitHub. Nor-\nmally this is unlikely to be something you would want to do on the same c omputer.\nHowever, it is quite possible that you might have a copy of the repo sitory on your\nlaptop and another on a desktop computer â€” actually this is a really usef ul way of\nsynchronizing and tracking changes across multiple machines k eeping a backup on\nthe cloud at the same time. Personally I do this to synchronize my lap top, my desktop\nat home and my machine at UCL. It is also possible that you might want to collaborate\nwith someone else such that you would have a copy and someone else w ould have a\ncopy.\nLetâ€™s start by creating a	\ngit2	folder that we can put the copy in (again you wouldnâ€™t\nnormally do this; we are just pretending this is on another machine ).\nStart by creating a directory for your second copy:\n33: Type the following:	\nmkdir ~/git2	\nNow we will â€˜cloneâ€™ the repository so we have a second local copy in this other\ndirectory. Replace USERNAMEwith your GitHub username in the following:\n34: Type the following:	\ncd ~/git2\ngit clone git@github.com:USERNAME/GitExercise.git	\nYou should ï¬nd that you now have a	GitExercise	directory exactly as you had\nbefore.\n17\n\n16 Managing multiple copies of a repository \nWe now have a repository in ourâˆ¼	\n/git	directory and a second copy inâˆ¼	/git2	which\nwe are pretending is on a different machine. Letâ€™s go to the âˆ¼	\n/git2	version and add another ï¬le â€” it doesnâ€™t matter what this\nis, we are just testing what happens. We will create a ï¬le, then add a nd commit it to\nGit, ï¬nally pushing it to GitHub:\n35: Type the following:	\ncd ~/git2/GitExercise\necho \"Hello world\" > hello.txt\ngit add hello.txt\ngit commit -a -m \"Added hello.txt\"\ngit push\nTake a look at the GitHub page (refresh it if necessary) and you wi ll see the new ï¬le is\npresent.\nNow letâ€™s go to the original version of our repository in âˆ¼	\n/git	:\n36: Type the following:	\ncd ~/git/GitExercise\nls\nOf course the	hello.txt	ï¬le is missing from this directory.\nRemembering that we sent changes to GitHub using git push, it is fairly obvious\nthat to get changes from GitHub, we use git pull:\n37: Type the following:	\ngit pull	\nYou can now check that the new ï¬le is present and look at the updated l og of\ncommits that have been made:\n38: Type the following:	\nls\ngit log\n16.1 Dealing with simple conï¬‚icts \nSuppose you have changed a ï¬le on both copies of your repository. H ow can Git deal\nwith that? If you have made distinct changes (to different parts of th e ï¬le), Git can sort\nout the conï¬‚icts automatically; if the changes are to the same part of the ï¬le (usually\nthe same line), Git will show you where the conï¬ct occurs and you w ill have to sort it\nout manually. Letâ€™s add a line to the startof our	\nproteins.txt	ï¬le in one repository and add\nanother line to the endof	\nproteins.txt	in the other repository.\nFirst we will add a line to the start of\nproteins.txt	in the ï¬rst repository:\n39: Type the following:	\ncd ~/git/GitExercise	\n18\n\nTask: \nEdit the ï¬le	\nproteins.txt	and add the following line to thestartof the ï¬le:	\nLysozyme Mouse LYZ1_MOUSE P17897 148	\nNow commit the changes and push them to GitHub:\n40: Type the following:	\ngit commit -a -m \"Added mouse lysozyme\"\ngit push	\nNow we will add a line to the end of	proteins.txt	in the second repository:\n41: Type the following:	\ncd ~/git2/GitExercise\nTask: \nEdit the ï¬le	\nproteins.txt	and add the following line to the endof the ï¬le:	\nPFKM Rat PFKAM_RAT P47858 780	\nNow commit the changes and try to push them to GitHub:\n42: Type the following:	\ngit commit -a -m \"Added rat PFK\"\ngit push	\nYou will ï¬nd that Git refuses to push the changes to GitHub because the ver sion of\nthe repository on GitHub has changed since you last synchronized . You should see a\nmessage like:	\nTo git@github.com:USERNAME/GitExercise.git\n! [rejected] master -> master (fetch first)\nerror: failed to push some refs to â€™git@github.com:USERNAM E/GitExercise.gitâ€™\nhint: Updates were rejected because the remote contains wor k that you do\nhint: not have locally. This is usually caused by another rep ository pushing\nhint: to the same ref. You may want to first integrate the remo te changes\nhint: (e.g., â€™git pull ...â€™) before pushing again. \nhint: See the â€™Note about fast-forwardsâ€™ in â€™git push --help â€™ for details.	\nInstead you must pull down the changes to merge them with what you have done\nbefore you can push:\n43: Type the following:	\ngit pull	\n19\n\nThis will automatically merge the changes on GitHub with the changes you have\nmade locally. The screen will change to a message saying someth ing like:	\nMerge branch â€™masterâ€™ of github.com:USERNAME/GitExercis e\n# Please enter a commit message to explain why this merge is ne cessary,\n# especially if it merges an updated upstream into a topic bra nch.\n# \n# Lines starting with â€™#â€™ will be ignored, and an empty messag e aborts\n# the commit.\n(Your message may be somewhat different on non-Linux systems.)\nAgain this has taken us to an editor where we can add information, but w e will\nsimply accept the default message by typing the characters: :wq(colon, â€˜wâ€™, and â€˜qâ€™).\nNow you can take a look at the	\nproteins.txt	ï¬le and you should ï¬nd both sets of\nchanges have been included in the ï¬le. We should now be able to push th e changes to\nGitHub:\n44: Type the following:	\ngit push	\nBefore we continue, we will go to the other repository and pull down the merged\nchanges:\n45: Type the following:	\ncd ~/git/GitExercise\ngit pull\nBoth versions of the repository are now back in synchronization! \n16.2 Dealing with more complex conï¬‚icts \nAs we have seen, Git sorts out conï¬‚icts when they are in different p arts of a ï¬le. How-\never, when two repositories have a different change to the same li ne of a ï¬le, Git cannot\nsort it out automatically. Letâ€™s try making a change to the same line in both versions\nof the ï¬le.\nFirst we will change the ï¬le in âˆ¼	\n/git	:\n46: Type the following:	\ncd ~/git/GitExercise\nTask: \nEdit the	\nproteins.txt	ï¬le and change the line	\nHemoglobin-alpha Human HBA_HUMAN P69905 142\nto read\nHemoglobin-alpha HUMAN HBA_HUMAN P69905 142\n(it doesnâ€™t really matter what change you make â€” just change s omething!)	\n20\n\nNow we commit and push the change:47: Type the following:	\ngit commit -a -m \"Changed the hemoglobin alpha line\"\ngit push	\nNow we will go to the repository in âˆ¼	/git2	and make a different change to the\nsame line:\n48: Type the following:	\ncd ~/git2/GitExercise\nTask: \nEdit the	\nproteins.txt	ï¬le and change the line	\nHemoglobin-alpha Human HBA_HUMAN P69905 142\nto read\nHemoglobin-ALPHA Human HBA_HUMAN P69905 142\n(again it doesnâ€™t really matter what change you make â€” just ma ke sure you change something\ndifferent in the same line!)	\nNow we commit and push the change:\n49: Type the following:	\ngit commit -a -m \"Changed the hemoglobin alpha line\"\ngit push\nAs with the simple conï¬‚ict earlier, you will ï¬nd that the pushhas been rejected by\nGitHub. As before you need to pullthe changes from the server:\n50: Type the following:\ngit pull\nThis time you should get a message that looks something like this sh owing that the\nautomatic merge has failed:\nremote: Counting objects: 3, done. \nremote: Compressing objects: 100% (2/2), done.\nremote: Total 3 (delta 1), reused 3 (delta 1), pack-reused 0\nUnpacking objects: 100% (3/3), done.\nFrom github.com:USERNAME/GitExercise a6105a1..931daf5 master -> origin/master\nAuto-merging proteins.txt\nCONFLICT (content): Merge conflict in proteins.txt\nAutomatic merge failed; fix conflicts and then commit the re sult.	\n21\n\nHave a look at the	proteins.txt	ï¬le and you will ï¬nd a section that looks some-\nthing like:	\n<<<<<<< HEAD \nHemoglobin-ALPHA Human HBA_HUMAN P69905 142 \n=======\nHemoglobin-alpha HUMAN HBA_HUMAN P69905 142\n>>>>>>> 931daf596e8ec94552889074ba767e87d3b578fe\nThis indicates the region of conï¬‚ict â€” the ï¬rst section shows how th e line looks in this\nrepository; the second section shows how it looks in the GitHub vers ion.\nTask: \nEdit the	\nproteins.txt	ï¬le and ï¬x the merge conï¬‚icts manually. You need to remove thelines\nthat start with	\n<<<<<<<	,=======	and	>>>>>>>	and then combine the remaining lines as you\nsee ï¬t; probably you will want a single line that looks like:	\nHemoglobin-ALPHA HUMAN HBA_HUMAN P69905 142	\nNow you need to commit the changes and push them back to GitHub:\n51: Type the following:	\ngit commit -a -m \"Merged conflicts in Hemoglobin alpha\"\ngit push	\nFinally we will return to the other copy of the repository and pull down the\nchanges:\n52: Type the following:	\ncd ~/git/GitExercise\ngit pull\n17 Summary \nThis tutorial has given an overview of the most common things that yo u need to do\nwith Git and GitHub. They are extremely powerful systems and you can do a lot more\nwith them, but for most people this will cover almost all of your nee ds. Get into the\nhabit of committing regularly â€” every half hour or so and whenever you have made\nany sort of signiï¬cant change. At a minimum, all you need to do having created a repository is to rem ember to\ngit add new ï¬les,git commit changes andgit pushthem to GitHub. If you are\nworking by yourself, these three commands will cover 95% of your i nteraction with\nGit. The other things described here (like going back to old versi ons of ï¬les) will cover\nanother 4%. The other 1% is used so rarely that most regular users of G it will have to\nGoogle for help!\n22\n\n18 Command summary \n18.1 Creating a local git repositoryâ€¢Create a directory for your repository: \nmkdir -p âˆ¼/git/ projectname\nâ€¢ Initialize git for that repository:cd âˆ¼/git/ projectname\ngit init\nâ€¢ Copy or create ï¬les that you wish to track with Git\nâ€¢ Add these so that Git knows they are to be tracked \ngit add filename\ngit commit -a -m \" message\"\n18.2 Synchronizing your local repository with GitHub â€¢Specify that the GitHub repository is the origin for this repository:\ngit remote add origin git@github.com: username/projectname .git\nâ€¢ Push your local ï¬les to the GitHub repository: \ngit push -u origin master\n18.3 Changing and adding ï¬les â€¢If you change a ï¬le, then you must commit the change and push to GitHub: \ngit commit -a -m \" message\"\ngit push\nâ€¢ If you create a new ï¬le, then you must add it to Git, commit it and push to \nGitHub:\ngit add filename\ngit commit -a\ngit push\n18.4 Looking at differences â€¢Look at differences between current versions of ï¬les and the mos t recent commit:\ngit diff\nâ€¢ Look at differences between the current version and a speciï¬ed c ommit:\ngit diff commitid\nâ€¢ Look at differences between two speciï¬ed commits:\ngit diff commitid1 commitid2\nâ€¢ Look at differences between the current version and another bran ch:\ngit diff branchname\n23\n\nIn any of these cases, if you are only interested in a particular ï¬le, just add the ï¬lename\non the end as well. \n18.5 Check out a repository from GitHub\nâ€¢Create a clone of your repository from GitHub: \ngit clone git@github.com: username/projectname .git\nâ€¢ Pull down changes that have been made to the GitHub repository: git pull\nâ€¢ If you change your copy and the copy on GitHub has changed in the mean time,\nyou wonâ€™t be able to pushyour changes. You will have to git pullthe repos-\nitory which will merge the changes with your local changes. This w ill happen\nautomatically unless the changes are in the same part of the ï¬le. In thi s case you\nwill have to resolve the conï¬‚icts manually.\n18.6 Creating branches for developing and testing new features â€¢Create a new branch named featureand switch to it using:\ngit checkout -b feature\n(you only need the -bwhen creating the branch)\nâ€¢ Link the branch to GitHub:\ngit push -u origin feature\nâ€¢ Switch back to the â€˜master â€™ branch: \ngit checkout master\nâ€¢ Merge the branch into the main version: \ngit checkout master\ngit merge feature\ngit push\nâ€¢ Delete the featurebranch\ngit branch -d feature\ngit push origin -delete feature\nNote: if you pull a branch down on another machine, it may not be able to s yn-\nchronize changes by just doing git pullandgit push . If this is the case, simply\ntype:\ngit pull origin feature\ngit push -u origin feature\nOnce you have done that you should just be able to do git pullandgit push .\n18.7 Undoing changes â€¢Undo an uncommitted change to one ï¬le:\ngit checkout -- filename\nâ€¢ Undo all uncommitted changes:\ngit reset --hard\n24\n\nâ€¢Undo a commit: \ngit revert commitid\n(where commitid is the commit identiï¬er obtained from git log).\nâ€¢ Obtain an older version of a speciï¬c ï¬le:\ngit checkout commitid -- filename\n(where commitid is the commit identiï¬er obtained from git log).\n18.8 Tags and releases â€¢Create a tag for your current code (e.g. a version number)\ngit tag taglabel\ngit push --tags\n(where taglabel is a label such as â€˜v1.0â€™).\nâ€¢ Create a release (with a ZIP ï¬le and a gzipped tar ï¬le for download) on GitHub.\nâ€¢ Obtain a list of changes from the previous tagged version for use in the release\ninformation using:\ngit shortlog oldtaglabel..HEAD\n(where oldtaglabel is a tag or commit identiï¬er of an earlier version).\n19 Other tutorials \nYou are also recommended to look at some of these for more inform ation:\nâ€¢	\nhttps://guides.github.com/activities/hello-world/\nâ€” A short overview from GitHub\nâ€¢\nhttps://try.github.io/\nâ€” An online interactive tutorial from GitHub.\nâ€¢\nhttps://www.tutorialspoint.com/git/\nâ€” An excellent introductory tutorial\nâ€¢\nhttps://www.codecademy.com/learn/learn-git\nâ€” Another excellent introductory tutorial\nâ€¢\nhttps://git-scm.com/docs/gittutorial\nâ€” A fairly long overview tutorial\nâ€¢\nhttp://www.vogella.com/tutorials/Git/article.html\nâ€” A fairly long detailed tutorial\nNote that these tutorials may suggest different ways of doing things f rom what has\nbeen presented above. I have shown you what works for me!\n25'),
(2, 'scheda tecnica.pdf', 'brera	\nCod. 7 AB003	\nDESCRIZIONE	Finitura decorativa, satinata ad effetto velatura.	\nCARATTERISTICHE	Consente di personalizzare i piÃ¹ svariati ambienti quali abitazioni p\\\rrivate, negozi, saloni, uffici, \nlocali pubblici, etc. Pronta allâ€™uso, di facile applicazione conferis\\\rce al supporto un gradevole \neffetto semitrasparente in contrasto al colore del fondo. Con il variare d\\\rella tecnica applicativa, Ã¨ \npossibile ottenere molteplici effetti e grazie al suo aspetto aiuta a mascherare eventuali piccole \nimperfezioni del supporto.	\nIMPIEGHI	Allâ€™interno su pareti in muratura o cartongesso opportunamente prepar\\\rate con ABSTRACT \nFONDO.	\nCOMPOSIZIONE	A base di resine acriliche in emulsione acquosa e opacizzanti selezionati\\\r.	\nPESO SPECIFICO	1.05 Â± 0.02 kg/L a 20Â°C.	\nVISCOSITÃ€	10000 Â± 2000 cP a 20Â°C con Brookfield RVT (F5 V10).	\nAPPLICAZIONE	Guanto, spalter, pennello, spugna, tampone, etc.	\nDILUIZIONE IN VOLUME	Pronto allâ€™uso.	\nRESA	10-15 m	2/L, per mano, a secondo dellâ€™assorbimento del supporto e del metodo a\\\rpplicativo.	\nESSICCAZIONE	Al tatto circa 1-2 h, per ricopertura 4-6 h, completa 18-24 h a 20Â°C \\\re 65% U.R.	\nCICLI APPLICATIVI	Per la preparazione del supporto, applicare se necessario una mano di Fi\\\rssamuro Ambientesano \ned a seguire una mano di 	ABSTRACT FONDO	.	\nTECNICA A GUANTO	 (esempio): mescolare accuratamente il prodotto e versarne una 	\nquantitÃ , preferibilmente in un recipiente largo. Inumidire il guanto\\\r da decoratore (con acqua), \nsuccessivamente strizzare e procedere con lâ€™applicazione di 	BRERA	, eseguendo movimenti ampi 	\ne circolari, cercando di evitare colature e di coprire tutta la superfic\\\rie, senza lasciare zone vuote. \nPer una decorazione ottimale, si consiglia di non interrompere il lavoro\\\r a metÃ  parete, ma di finire \nad uno stacco architettonico o ad un angolo della stessa e di non sovrap\\\rporre le varie passate. \nÃˆ possibile applicare 	BRERA	 anche su idropitture superlavabili. Ãˆ possibile utilizzare altri att\\\rrezzi 	\nquali spalter, pennello, spugna etc.	\nCOLORE	Neutro, riferimenti tinte cartella 	BRERA	.	\nAVVERTENZE	1. Dopo lâ€™aggiunta del colorante agitare il prodotto manualmente o co\\\rn agitatore a bassa velocitÃ . \nNon utilizzare agitatori ad alta velocitÃ .\n2. Per evitare giunte o sovrapplicazioni si consiglia di non interromper\\\re il lavoro a metÃ  parete.\n3. La metodologia applicativa e la tipologia del supporto, possono dare \\\rorigine ad effetti cromatici \ndifferenti.\n4. Non applicare mai ad una temperatura ambiente e del supporto inferior\\\re ai 5Â° C e superiore ai \n30Â°C.\n5. Per lo stoccaggio: conservare il prodotto in luogo asciutto e preserv\\\rare dal gelo.	\nCARATTERISTICHE CHIMICO-FISICHE ED APPLICATIVE TIPICHE:\nRIFERIMENTI DA INSERIRE NEI CAPITOLATI PER APPALTI E PREVENTIVI:\nFinitura decorativa, satinata ad effetto velatura a base di resine acriliche in emulsione acquosa e opacizz\\\ranti selezionati.\nPeso specifico: 1.05 Â± 0.02 kg/L a 20Â°C.\nResa: 10-15 m	2\\L per mano.\nREV. 0\n7/2013	\nscheda tecnica\nfinitura decorativa	\nBoero Bartolomeo S.p.A.	\nVia Macaggi, 19 - 16121 Genova	\nTel. +39 010.5500.70 - Fax +39 010.5500.730\nwww.attivacolori.it/abstract - sales@attivage.it	\nPer le norme di riferimento consultare la “Legenda - Schede Tecniche”.\n“Ai sensi del D. Lgs. n°161/06 i valori COV espressi sulle confezioni si riferiscono alle diluizioni e ai diluenti specificati e ai prodotti tinteggiati secondo le \nformulazioni indicate da Boero Bartolomeo S.p.A.”');
INSERT INTO `files` (`id`, `filename`, `content`) VALUES
(3, 'riso-gallo.pdf', '10Â° edizione Guida Gallo 2016	 	\nI Risotti dei migliori ristoranti del mondo	 	\nUn vero e proprio racconto	-itinerario bilingue lungo la strada del riso, che parte dallâ€™Italia del Nord e si snoda lungo tutto 	\nil nost	ro Paese, oltrepassando anche i confini per giungere in tutti i continenti. Una collezione variegata di gustosi risotti 	\ncreati dai migliori chef italiani e stranieri giunta alla decima edizione, edita	 da Edizioni Gribaudo,	 Gruppo Feltrinelli e 	\ncurata per l	â€™occasione da una firma dâ€™eccezione, il critico enogastronomico Allan Bay.	 	\nDistribuito nelle librerie	 	\nPrezzo: â‚¬ 15,00	 	\n \nLa ricetta perfetta per le feste Natalizie Ã¨	  	\nRisotto Venere all\'aragosta al profumo di zenzero lime e limone spuma di champagne e aneto	 con caviale e oro	 	\n 	\n 	\nINGREDIENTI	 	\n320 g di Riso Venere Gallo | 2 aragoste | 5 g	 di zenzero | la scorza di 1 lime | la scorza di 1	 	\nlimone | 100 ml di Champagne | 5 g di aneto |	 20 g di caviale Black River | 4 fogli di oro	 edibile 24 K | 30 g di cipolla | 30 	\ng d i sedano |	 50 di porro | 30 g di carota | 3 l di acqua |	 10 g di timo | 10 g 	di alloro | 20 ml di panna	 da cucina | 30 g di 	\nscalogno | 30 g di cipolla	 dâ€™inverno | 50 g di Parmigiano	-Reggiano |	 80 g di burro | 20 ml di olio extravergine di	 oliva | 50 	\ng di sale grosso | sale fi no | pepe	 	\n \nESECUZIONE	 	\nPer il brodo di aragosta:\n\nin una pentola saltate in un fi lo di olio	 la cipolla, il sedano, 30 g di porro e la carota,	 poi aggiungete le teste e i gusci 	\ndelle	 aragoste, lâ€™acqua, il timo, lâ€™alloro e il sale	 grosso. Fate bollire per 30 minuti, poi	 passate al colino e fi ltrate.	 	\nPer la 	spuma di Champagne:	  	\nversate in un sifone 50 ml di Champagne	 e la panna, aggiustando di sale fi no e pepe.	 Caricate con una cartuccia di 	\ngas.	 	\nPer il risotto:	 	\nmettete il burro in una casseruola	 e fate appassire lo scalogno, il porro rimasto	 e la cipolla dâ€™in	verno, quindi unite il riso	 e 	\nlâ€™aragosta sminuzzata. Deglassate	 con lo Champagne, fate evaporare lâ€™alcol	 e cominciate la cottura con il brodo di	 	\naragosta bollente, versandolo poco	 alla v	olta fi no a coprire la superfi	cie.	 	\nQuando il riso sarÃ  al dente, 	regolate di sale.	 Aggiungete lo zenzero grattugiato, la scorza	 del lime e del limone, il burro, 	\nil formaggio	 e dellâ€™olio, mantecando.	 	\nPer impiattare:	 	\nalla base sistemate il risotto, decoratelo tutto	 attorno con la spuma di Champagne, lâ€™aneto,	 lâ€™oro edibile	 e un cucchiaino 	\ndi madreperla	 con il caviale. Completate con la coda	 dellâ€™aragosta e servite.	 	\n \nSpeciale Pack Latta	 Gran Riserva	 \n 	\n \nÃˆ lâ€™eccellenza del riso Made in Italy, scelto dai grandi Chef, il migliore per la realizzazione di â€œrisotti dâ€™autoreâ€. Il Gra	n 	\nRiserva Ã¨ un Carnaroli seminato a densitÃ  ridotta in un terreno argilloso 	nel cuore del Pavese, raccolto e fatto maturare 	\nin silos per un anno proprio come il buon vino. Eâ€™ pressochÃ© privo di imperfezioni, dai chicchi grandi e corposi, altamente \nselezionati e calibrati (solo un chicco su tre diventa Gran Riserva), garantisce una	 maggiore resistenza in cottura e un 	\nmaggiore assorbimento dei condimenti. Prodotto in quantitÃ  limitata, in vendita sullâ€™e	-shop del sito 	www.risogallo.it	 e nei 	\npv Eataly.	 	\nPrezzo speciale: 9.90â‚¬ con Guid	a Gallo inclusa'),
(4, 'cv_example.pdf', 'Curriculum vitae\nINFORMAZIONI PERSONALI Anna Paola  Conte \nVia Ariosto 88, 40126 Bologna (Italia) \n+39 06123456      +39 312345678     \nannapaola.conte@example.it \nMSN   paola.conte    \nOCCUPAZIONE DESIDERATA\nGestione risorse umane\nESPERIENZA\nPROFESSIONALE\n01/2005â€“alla data attuale \nAssistente amministrativo\nAlma Mater Studiorum\nVia Zamboni 37, 40126 Bologna \nGestione della documentazione contabile generale, fiscale e tributaria, relazione con la clientela\n09/2001â€“08/2004\nTirocinio\nCooperativa Tirrenica\nVia Enrico Fermi 45, 45133 Bologna \nAnalisi Curriculum Vitae, gestione dei colloqui, rapporto con la clientela\n06/2001â€“07/2001\nTirocinio\nBenetton\n15 Brompton Road, W1J 8RE London (Regno Unito) \nAssistenza presso gli uffici amministrativi della societÃ , alla contabilitÃ  di cassa e gestione dei contatti \ncon la rete di vendita, gestione delle scadenze fiscali periodiche e delle buste paga\n04/1997â€“05/2000\nCassiera\nPizza Pazza\nVia dello Scoglio 146, 40100 Bologna \nGestione della cassa, delle telefonate e delle ordinazioni\nISTRUZIONE E FORMAZIONE\nnovembre 2003â€“dicembre 2004\nMediatore interculturale\nComunitÃ  incontro onlus (con il patrocinio della Regione Emilia Romagna)\nâ–ª front office di orientamento\nâ–ª progettazione e mediazione linguistica\n09/1993â€“06/2001\nLaurea in Lettere Moderne\nAlma Mater Studiorum, UniversitÃ  di Bologna, facoltÃ  di Lettere Moderne\nâ–ª letteratura latina\nâ–ª letteratura italiana\nâ–ª storia contemporanea\n09/1988â€“07/1993\nDiploma magistrale\n9/7/18     Â© Unione europea, 2002-2018 | http://europass.cedefop.europa.eu    Pagina  1   /  2\n\nCurriculum vitae   Anna Paola Conte\nIstituto Magistrale Maria Montessori, Via Mazzini 5 - 40123 Bologna\nâ–ª espressione italiana\nâ–ª matematica\nâ–ª scienze\nâ–ª lingua straniera (inglese, francese, tedesco)\n09/2000â€“02/2002\nAttestato di frequenza - Office 97, Excel, Access, Internet Explorer\nCentro di Formazione Professionale Guglielmo Marconi, Bologna\nCOMPETENZE PERSONALI\nLingua madre\nItaliano\nLingue straniere\nCOMPRENSIONE PARLATO PRODUZIONE SCRITTA\nAscolto Lettura Interazione Produzione orale\nInglese B1 C1 B1 B1 A2\nFrancese B1 B2 B1 B1 A2\nTedesco A2 A2 A1 A1 A1\nLivelli: A1 e A2: Utente base - B1 e B2: Utente autonomo - C1 e C2: Utente avanzato\nQuadro Comune Europeo di Riferimento delle Lingue  \nCompetenze comunicative\nCapacitÃ  di lavorare in gruppo maturata in molteplici situazioni in cui era indispensabile la \ncollaborazione tra figure diverse e con modalitÃ  orarie varie (turni, fine settimana)\nCompetenze organizzative e\ngestionali CapacitÃ  di lavorare in situazioni di stress, legate soprattutto al rapporto con il pubblico e alle \nscadenze fiscali delle attivitÃ  lavorative\nCompetenze digitali\nAUTOVALUTAZIONE\nElaborazione\ndelle\ninformazioni Comunicazione Creazione di\nContenuti Sicurezza Risoluzione di\nproblemi\nUtente autonomo Utente autonomo Utente avanzato Utente base Utente base\nCompetenze digitali - Scheda per l\'autovalutazione  \nConoscenza degli applicativi Microsoft e del pacchetto Office, in modo particolare Excel e Access.\nAltre competenze\nâ–ª scrittura creativa: corso presso l\'Informagiovani del Comune di Bologna\nâ–ª tecniche di rilassamento: corso di yoga presso un centro sportivo polivalente di Bologna\nPatente di guida\nB\nULTERIORI INFORMAZIONI\nAutorizzo il trattamento dei dati personali contenuti nel mio curriculum vitae in base allâ€™art. 13 del D. \nLgs. 196/2003 e allâ€™art. 13 del Regolamento UE 2016/679 relativo alla protezione delle persone fisiche\ncon riguardo al trattamento dei dati personali.\n9/7/18     Â© Unione europea, 2002-2018 | http://europass.cedefop.europa.eu    Pagina  2   /  2'),
(5, 'xdebug.pdf', 'X\ndebug F\nazerÂ oÂ debugÂ deÂ apl icaÃ§ÃµesÂ PHPÂ se mpreÂ f oiÂ umÂ g randeÂ problem a.Â UtilizarÂ echoÂ e Â var_dum pÂ nÃ£oÂ Ã©Â a Â \nme\nlhorÂ man eira,Â alÃ©m Â deÂ nÃ£oÂ serÂ nada Â elegante.Â Ex is te Â umaÂ f orma Â deÂ realizar Â oÂ debugÂ deÂ ap licaÃ§Ãµes Â \nPH\nPÂ de Â for maÂ ma isÂ cor retaÂ e Â Ãºtil. Â Esta Â f or maÂ Ã©Â usandoÂ­seÂ aÂ e xtensÃ£oÂ chamadaÂ xdebug.Â  In\nsta laÃ§Ã£ o P\nodeÂ­se Â ins talar Â o Â xdebug Â compilandoÂ­ seÂ o Â cÃ³digoÂ­f onteÂ ou Â usando Â uma Â v er sÃ£o Â binÃ¡r ia. Â P ara Â \nW\nindo wsÂ oÂ maisÂ fÃ¡c ilÂ Ã©Â f azer Â oÂ download Â deÂ umÂ ar quiv oÂ dll Â noÂ siteÂ  http\n://pecl4win.php.net/e xt.php/php_xdebug.d lle\nÂ s al vÃ¡Â­loÂ noÂ dir etÃ³rioÂ extÂ doÂ P HP. P\nara Â LinuxÂ Ã© Â possÃ­vel Â fazerÂ a Â instal aÃ§Ã£o Â usandoÂ­ seÂ oÂ comandoÂ pec l:sudoÂ pecl\nÂ insta llÂ xdebugÂ­ bet a Com\nÂ esteÂ com andoÂ Ã©Â f eitoÂ oÂ do wnloadÂ dosÂ f onteÂ eÂ oÂ xdebug Â Ã©Â compiladoÂ eÂ insta lado. DepoisÂ deÂ ins\ntal adoÂ Ã©Â precisoÂ conf igurarÂ oÂ PHPÂ paraÂ reconhec erÂ aÂ novaÂ e xtensÃ£o.Â N oÂ ar quiv oÂ php.ini Â \nÃ©\nÂ p recisoÂ adi cionarÂ aÂ seguinte Â linha: P\nara Â wind ow s: zend_e\nxtension_ts=\" d:/p\nro gram as/xampp/php /ext/ph p_xdebug.d ll \"\nP\nara Â Linux: zend_e\nxtension=\"/usr/ lib/php5 /xdebug.so \"ApÃ³sÂ adicion\narÂ umaÂ dasÂ linhasÂ aci ma,Â queÂ ind icaÂ oÂ caminho Â comple toÂ doÂ ar quiv oÂ daÂ e xtensÃ£o,Â Â Ã© Â \nprecisoÂ conf\nigurarÂ oÂ Xdebug, Â adicion andoÂ asÂ linhas: xdebug.\ndefault_enable = On  xdebug.c\nollect_includes = On  xdebug.c\nollect_params = On  xdebug.c\nollect_retur n = On  xdebug.c\nollect_vars = On  xdebug.\ndump_gl obals = On  OBS:Â Sem\npreÂ queÂ forÂ mod ificado Â oÂ arqui voÂ php.in iÂ Ã©Â necessÃ¡ rioÂ reinic iarÂ oÂ servidorÂ Apac he.\n\nUsan\ndoÂ oÂ Xde bug O\nÂ pr ime iro Â te ste Â Ã© Â cr iar Â um Â scr iptÂ PHP Â com Â er ro Â e Â e x ecutÃ¡Â­lo. Â O Â Xdebug Â v ai Â mos trarÂ div ersas Â \ninf\normaÃ§ÃµesÂ impor tant esÂ s obreÂ oÂ er ro. O\nÂ Xdebug Â adic iona Â vÃ¡r ias Â opÃ§Ãµes Â ao Â php. Â U m aÂ delas Â Ã© Â r ef azer Â o Â v ar_du mp.Â Quando Â a Â e xtensÃ£o Â e stÃ¡ Â \nat\niv a, Â o Â comando Â v ar_du mpÂ mos traÂ inf orma Ã§Ãµes Â mais Â d et alh adas Â das Â v ar iÃ¡veis. Â P ara Â te star Â Ã© Â sÃ³ Â \ne\nx ecut arÂ oÂ v ar_dumpÂ pas sandoÂ comoÂ parÃ¢metroÂ q ualq uer Â var iÃ¡ v elÂ ouÂ obje toÂ doÂ script: $dados \n= ar ray(    \n  \'um\' =>  \'uma string\',    \n  \'dois\'  => ar ray(    \n       \'two .one\'  => ar ray(    \n           \'two .one.ze ro\'  => 210 ,    \n           \'two .one.one\' =>  array(    \n               \'two .one.one.ze ro\'  = > 3.1 41592564,    \n               \'two .one.one. one\'  => 2.7,    \n           ),    \n       ),    \n  ),    \n  \'tr es\' =>  $t,    \n  \'quatr o\' =>  range(0,  5),  );\n  var_dump( $dad\nos ); P\nro teÃ§ Ã£oÂ d eÂ memÃ³ria Ã‰\nÂ pos sÃ­velÂ conf igurar Â o Â Xdebug Â para Â p roteg erÂ o Â ser vidor Â em Â caso Â de Â um Â loop Â inf inito, Â q ue Â poder ia Â \nconsumir\nÂ muitos Â r ecursos. Â P or Â de fault Â e sta Â o Â X debug Â conf igura Â para Â 1 0 0 Â iteraÃ§Ãµ es.Â P ara Â modif icar Â \nes\ntaÂ cara cterÃ­s tic asÂ d ev eÂ­seÂ adic ionarÂ aÂ seguin teÂ linhaÂ noÂ php.ini :xdebug.m\nax_nesting_ le v el=4 As\nsim, Â oÂ program aÂ aba ix oÂ v aiÂ in vocarÂ a Â funÃ§Ã£oÂ a()Â soment eÂ quatr oÂ vezesÂ eÂ depoisÂ irÃ¡ Â gerarÂ um Â erro: <?php\na(\n);  funct\nion a() {    \n       echo  \"lixo\" ;    \n       a();  }\n  ?>\n\nCol\netan doÂ maisÂ i nformaÃ§ Ãµes P\nara Â q ue Â o Â X debug Â possa Â colet arÂ mais Â inf orma Ã§Ãµes Â sob reÂ os Â er ros Â Ã© Â possÃ­ vel Â conf igurÃ¡Â­lo Â para Â \ncapturar\nÂ asÂ var iÃ¡ v eisÂ  globaisÂ  comoÂ PO ST,Â GE T,Â FILES,Â  etc.Â  ParaÂ  issoÂ  Ã©Â sÃ³Â  adicion arÂ asÂ linh asÂ abaix o Â \nnoÂ php.ini\n: xdebug.\ndump.GET=*  xdebug.\ndump.POST=*  xdebug.\ndump.COOK IE=*  xdebug.\ndump.ENV=*  xdebug.\ndump.FILES=*  xdebug.\ndump.RE QUEST=*  xdebug.\ndump.SE RVER=*  xdebug.\ndump.SESS ION=*OÂ *Â podeÂ serÂ sub\nstitu Ã­doÂ pelo Â nomeÂ daÂ v ariÃ¡v elÂ q ueÂ seÂ deseja Â capturar.Â Exemplo: xdebug.\ndump.POST=user name,  pas swo rd Qua\nntasÂ fu nÃ§ÃµesÂ f oramÂ i nvo ca dasÂ n oÂ scrip t? <?php\necho\n xdebug_get_funct ion_count(); ?>\nQua\nntoÂ t em poÂ dem orouÂ aÂ  ex ec uÃ§Ã£ o? <?php \nfo\nr($i=0 ;$i<1000000;$i++) {    \n       $j = $i ;  }\n  echo\n \"Tempo de  execuÃ§Ã£o=\".  xdebug_time_inde x();?>\nQua\nntaÂ me mÃ³riaÂ ut ilizou? <?php\necho\n \"MemÃ³r ia: \", xdebug_memory_usage( ), \" bytes\\n\\n\" ; fo\nr($i=0 ;$i<1000000;$i++) {    \n       $j = $i ;  }\n  echo\n \"MÃ¡ximo  de MemÃ³ria usada: \",  xdebug_pea k_memory_usage( ), \" bytes\\n\";  \n?>\n\nT\nraceÂ d aÂ aplicaÃ§ Ã£o P\nara Â aco mpanhar Â oÂ fluxoÂ daÂ ap licaÃ§Ã£oÂ Ã© Â precisoÂ ad icionarÂ asÂ linhasÂ aba ix oÂ noÂ php.ini: xdebug.auto_\ntrace=1  xdebug.t\nrace_output_d ir=/tmp  xdebug.t\nrace_opti ons=1  xdebug.t\nrace_format = 0 Des\nta Â for ma Â serÃ¡ Â cr iado Â um Â a rqui vo Â no Â /tmp Â c ham adoÂ trace.? ??Â para Â cada Â scr iptÂ PH PÂ q ue Â for Â \ne\nx ecut ado. Â N este Â ar quiv oÂ es tarÃ¡ Â descr itoÂ cada Â com ando Â e x ecut ado, Â v ar iÃ¡veis Â cr iadas, Â etc. Â As sim Â \nf\nacili ta Â aÂ visuali zaÃ§Ã£oÂ doÂ fluxoÂ doÂ scr iptÂ eÂ eventuaisÂ er ros. Outra\nÂ f or ma Â de Â se Â f azer Â is so Â Ã© Â nÃ£o Â adi cionar Â as Â linhas Â acim aÂ no Â php.ini Â e Â coloc arÂ e xplici ta mente Â no Â \ncÃ³digo\nÂ Â do Â scr iptÂ as Â funÃ§Ãµes Â xdebug_s tar t_tra ce()Â e Â xdebug_ stop_tra ce()Â indi cando Â onde Â d ev e Â ser Â \nini\nciado Â eÂ final izado Â oÂ trace. Â Exemplo: <?php \necho\n \"MemÃ³r ia: \", xdebug_memory_usage( ), \" bytes\\n\\n\" ; xdebug_start_trace(\'BUG_TR\nACE_AP PEND\');  //fazer append  do trace fo\nr($i=0 ;$i<1000000;$i++) {    \n       $j = $i ;  }\n  fo\nr($j=0 ;$j<100;$j++ ) {    \n       echo  $j;  }\n  xdebug_stop_t\nrace();  echo\n \"MÃ¡ximo  de MemÃ³ria usada: \",  xdebug_pea k_memory_usage( ), \" bytes\\n\"; ?>\nDes\nta Â for ma, Â a Â funÃ§Ã£o Â xdebug_peak_ memory_usage()Â nÃ£o Â serÃ¡ Â apresent adaÂ no Â trace. Â SerÃ¡ Â cr iado Â \num\nÂ arqui voÂ noÂ dir etÃ³rioÂ temporÃ¡r ioÂ doÂ servidorÂ comÂ oÂ nome Â trace.??.xt P\nro fili ng Pr\nofiling Â Ã© Â uma Â maneir aÂ de Â visua lizarÂ q uais Â par tesÂ do Â cÃ³digo Â do Â scr iptÂ e stÃ£o Â demorando Â mais Â para Â \ne\nx ecut ar.Â  O Â Xdebug Â precisa Â ser Â conf iguradoÂ para Â poder Â g erar Â es tas Â es tat Ã­s tic as. Â P ara Â isso Â de veÂ­se Â \nadi\ncionar Â asÂ linhasÂ noÂ php.ini :xdebug.\nprofi ler_enable = 1  xdebug.e\nxtended_info = 0  xdebug.\nremote_enable  = 0   xdebug.\nprofi ler_outp ut_dir=/tmp  ApÃ³s\nÂ a Â e x ecuÃ§Ã£o Â de Â um Â scr ipt Â Ã© Â g erado Â um Â a rquiv oÂ no Â /tmp Â com Â as Â e stat Ã­s tic asÂ de Â e x ecuÃ§Ã£o. Â P ara Â \nana\nlisar mos Â estas Â es tatÃ­s ticas Â podeÂ­se Â usar Â uma Â fer ramen ta Â grÃ¡f ica Â para Â Linux Â cham ada Â \nkcac\nhegrind, Â queÂ podeÂ serÂ in sta lada Â noÂ U buntu Â comÂ oÂ comando\n\nsudo \napt- get inst all kc achegr ind Ex\necut andoÂ­se Â o Â kcac hegrind Â e Â abr indo Â o Â a rqui vo Â g erado Â podemos Â visualiz arÂ q ual Â par teÂ do Â scr ipt Â \ndemorouÂ mais\nÂ paraÂ serÂ execut ada,Â conf orma Â aÂ f iguraÂ aba ix oÂ demon stra : Exis\nteÂ um aÂ ferram entaÂ paraÂ W indowsÂ q ueÂ podeÂ serÂ encontr adaÂ emhttp\n://sourcef org e.net/p rojects/wincac hegrind / Â \nq\nueÂ te mÂ aÂ mesm aÂ funÃ§Ã£o. Deb\nugÂ d eÂ AplicaÃ§ Ãµes Outra\nÂ Â caract erÃ­stica Â q ueÂ Ã© Â impor tan teÂ para Â auxil iarÂ o Â proces soÂ de Â dese nvo lvimento Â Ã© Â o Â ac esso Â a Â um Â \ndebug\nÂ da Â aplic aÃ§Ã£o, Â com Â inspeÃ§ Ã£oÂ de Â v ar iÃ¡v eis, Â pon tosÂ de Â parada, Â e tc. Â O Â Xdebug Â f o rnec eÂ acesso Â a Â \nes\nteÂ  tipoÂ  deÂ car acterÃ­sti ca.Â  ParaÂ  issoÂ  Ã©Â preciso Â terÂ algu maÂ IDE Â queÂ  possuaÂ  supor teÂ ao Â Xdebug.Â Dentre Â \nas\nÂ I DEs Â q ue Â se Â encaixam Â ne sta Â cat egor ia Â podemÂ­se Â cit arÂ o Â Ecl ipse, Â vim, Â e Â o Â PH PEdi tÂ v er sÃ£o Â 2 .1 0Â  ou Â \nsuper\nior. P\nara Â q ue Â o Â X debug Â f or neÃ§a Â ac esso Â ao Â debug Â das Â apli caÃ§Ãµes Â Ã© Â p reciso Â adicionar Â as Â linhas Â aba ix o Â no Â \nphp.ini\n: xdebug.\nremote_enable=1 xdebug.\nremote_handler=db gpxdebug.\nremote_mo de=req xdebug.\nremote_h ost=localhost xdebug.\nremote_p ort=9000 xdebug.e\nxtended_info=1 A\nÂ i ma gem Â abai xo Â demon stra Â o Â u so Â do Â debug Â no Â P HPEdit. Â A Â l inha Â em Â v er me lho Â indica Â um Â ponto Â de Â \n\nparad\naÂ (breakÂ point) Â doÂ programa. Â AÂ linhaÂ em Â azulÂ Ã©Â aÂ linh aÂ emÂ execuÃ§ Ã£oÂ noÂ mom ento.Â  Des\nta Â f or ma Â Ã© Â po ssÃ­ vel Â aco mpanhar Â passoÂ­aÂ­pas soÂ a Â e x ecuÃ§ Ã£oÂ de Â uma Â apli caÃ§Ã£o, Â v er Â o Â conteÃºdo Â das Â \nv\nar iÃ¡v eisÂ eÂ f aciliar Â aÂ descober ta Â deÂ q uaisquerÂ pr oblemasÂ noÂ scr ipt. N\noÂ site Â do Â X debug Â Ã© Â po ssÃ­v elÂ encon trarÂ outras Â I DEs Â q ue Â podem Â ser Â u sadas Â para Â f azer Â o Â debug Â das Â \napl\nicaÃ§Ãµ esÂ usandoÂ aÂ e xtensÃ£o. Ref\nerÃªnci as http:/\n/files.de ric kret hans.nl/ Â \nÂ  x\ndebugÂ­brasi l6.pdf Â \nÂ  .\nhttp:/\n/www .derickr ethans.nl/f iles/phparc hÂ­xdebugÂ­qa.pdf http:/\n/www .xdebug.or g'),
(6, 'TestUnit.pdf', 'TEST  A U TO M AT IC I  C O N P H PU N ITT EST  A U TO M AT IC I  C O N P H PU N IT	\nCorso 	\nModulo 	\nD ott. 	\nBackend System Integrator	\nPHP Programming	\nE n ric o  Z im uel\n\nPR O GRAM M APR O GRAM M A	\nTest automatici\nPHPUnit\nCon\0gurazione\nsetUp/tearDown\nData provider\nMock di oggetti\nCode coverage\n\ne le ctr o m ech an ic a l  c o m pu te r\'s  lo g	H arv a rd  M ark  I I\n\nTEST  A U TO M AT IC ITEST  A U TO M AT IC I	\nI test automatici sono una collezione di asserzioni, ossia\nuna serie di istruzioni che testano la corretta esecuzione\ndi una porzione di codice, utilizzando dei dati in ingresso\nprestabiliti e veri\0cando che i risultati siano quelli attesi\n\nIM PO RTA N ZA  D EI  T ESTIM PO RTA N ZA  D EI  T EST	\nRiducono il numero di bug\nRiducono i tempi di sviluppo (a lungo termine)\nAiutano a chiarire le speci\0che del progetto\nAumentano la con\0denza nel codice, e.s. durante il\nrefactoring\nGarantiscono notti tranquille agli sviluppatori\n\nSO FT W AR E F A IL U RE ( E SE M PI)S O FT W AR E F A IL U RE ( E SE M PI)	\n, $128 milioni andati in	\nfumo per un errore di conversione metrico	\n, un bug del processore Pentium	\nnella divisione in virgola mobile. Danni per $475\nmilioni	\n, un satellite esploso pochi secondi	\ndopo il decollo a causa di un over\0ow di 64-bit in 16-\nbit. Danni per $8 bilioni\nNASAâ€™s Mars Climate Orbiter\nPentium FDIV bug\nAriane 5 Flight 501\n\nPH PU N ITP H PU N IT	\nLibreria PHP per sviluppare test automatici\nProgetto open source nato nel 2004 per opera di\nStandard de facto per i test automatici in PHP\nSito u\0ciale del progetto: \nSebastian Bergman	\nphpunit.de\n\nIN STA LLA ZIO NEIN STA LLA ZIO NE	\nInstalla phpunit solo per l\'ambiente 	dev	\ncomposer 	require	 	--dev phpunit/phpunit	\n{	 	\n    	\"require-dev\"	: {	 	\n        	\"phpunit/phpunit\"	: 	\"^8.4\"	 	\n    }	 	\n}\n\nCO NFIG U RAZIO NECO NFIG U RAZIO NE	\nPHPUnit puÃ² essere con\0gurato tramite un \0le di	\ncon\0gurazione XML (phpunit.xml):	\n<	phpunit	>	 	\n  	<	testsuites	>	 	\n    	<	testsuite	 	name	=	\"Test automatici\"	>	\n    	<	directory	>	./test	</	directory	>	 	\n 	</	testsuite	>	 	\n  	</	testsuites	>	 	\n  	<	filter	>	 	\n    	<	whitelist	 	processuncoveredfilesfr omwhitelist	=	\" true\"	>	 	\n      	<	directory	 	suffix	=	\".php\"	>	./src	</	directory	>	 	\n    	</	whitelist	>	 	\n  	</	filter	>	 	\n</	phpunit	>\n\nST R U TTU RA D I  U N  T ESTS T R U TTU RA D I  U N  T EST	\nI test in PHPUnit sono raggruppati in classi,\ndenominate con il su\0sso 	Test	 (es. FilterTest)	\nOgni classe deve estendere\nPHPUnit\\Framework\\TestCase\nUn test Ã¨ una funzione della classe, denominato con il\npre\0sso 	test	 (es. testEmailIsValid)\n\nUTIL IZ ZOU TIL IZ ZO	\nPHPUnit Ã¨ eseguito dal terminale, utilizzando il seguente	\ncomando:	\nvendor	/bin/	phpunit\n\nESE M PIO  D I  C LA SSE  D A T ESTA R EESE M PIO  D I  C LA SSE  D A T ESTA R E	\nnamespace	 	App	;	 	\nclass	 	Filter	 	\n{	 	\n    	public	 	function	 	isEmail	(string $email)	 	\n    	{	 	\n        	// @todo da implementar e	 	\n    }	 	\n}\n\nESE M PIO  D I  T ESTE SE M PIO  D I  T EST	\nnamespace	 	App	\\	Test	;	 	\nuse	 	PHPUnit	\\	Framework	\\	TestCase	;	 	\nuse	 	App	\\	Filter	;	 	\nclass	 	FilterTest	 	extends	 	TestCase	 	\n{	 	\n    	public	 	function	 	testValidEmail	()	 	{	\n        $filter = 	new	 Filter();	 	\n        	$this	->assertTrue($filter->i sEmail(	\' foo@bar.com\'	));	 	\n    }	 	\n    	public	 	function	 	testInvalidEmail	()	 	{	 	\n        $filter = 	new	 Filter();	 	\n        	$this	->assertFalse($filter-> isEmail(	\' foo\'	));	 	\n    }	 	\n}\n\nASSE R ZIO NIASSE R ZIO NI	\nPHPUnit o\0re numerose asserzioni:	\nassertTrue()	: veri\0ca che l\'elemento sia true	\nassertFalse()	: veri\0ca che l\'elemento sia false	\nassertEmpty()	: veri\0ca che l\'elemento sia vuoto	\nassertEquals()	: veri\0ca che due elementi siano uguali\n\nASSE R ZIO NI  ( 2 )A SSE R ZIO NI  ( 2 )	\nassertGreaterThan()	: veri\0ca che un elemento sia	\nmaggiore di\nassertContains()	: veri\0ca che una stringa sia	\ncontenuta in unâ€™altra o che un elemento sia contenuto\nin un array\nassertInstanceOf()	: veri\0ca che un elemento sia	\nistanza di una classe speci\0ca	\n la lista completa	Qui\n\nESE R CIZ IOE SE R CIZ IO	\nImplementare il metodo 	App\\Filter::isEmail()	 e	\nveri\0care che i test automatici siano tutti 	positivi	\nNota:	 I sorgenti dell\'esercizio si trovano su	\nits.mrooms.net\n\nSE T U PSE T U P	\nPHPUnit o\0re un metodo per inizializzare un test:	\nclass	 	FilterTest	 	extends	 	TestCase	 	\n{	 	\n  	public	 	function	 	setUp	()	: 	void	 	\n  	{	 	\n    	$this	->filter = 	new	 Filter();	 	\n  }	 	\n  	public	 	function	 	testValidEmail	()	 	\n  	{	 	\n    	$this	->assertTrue(	$this	->filter->isEmail(	\'foo@bar.com\'	));	 	\n  }	 	\n}\n\nTEA R D O W NTEA R D O W N	\nC\'Ã¨ anche un metodo per resettare un test:	\nclass	 	FilterTest	 	extends	 	TestCase	 	\n{	 	\n    	public	 	function	 	setUp	()	: 	void	 	\n    	{	 	\n        file_put_conten ts(	\' /tmp/foo\'	, 	\'Test\'	);	 	\n    }	 	\n    	public	 	function	 	tearDown	()	: 	void	 	\n    	{	 	\n        unlink(	\'/tmp/foo\'	);	 	\n    }	 	\n    	public	 	function	 	testFoo	()	 	\n    	{	 	\n        	// utilizzo il file tem poraneo	 	\n     }	 	\n}\n\nCIC LO  D I  U N  T ESTC IC LO  D I  U N  T EST	\nsetUp() e tearDown() vengono richiamati prima e dopo	\nogni test (funzione)	\nclass	 	FooTest	 	extends	 	TestCase	 	\n{	 	\n    	public	 	function	 	setUp	()	 	{}	 	\n    	public	 	function	 	tearDown	()	 	{}	 	\n    	public	 	function	 	testUno	()	 	{}	 	\n    	public	 	function	 	testDue	()	 	{}	 	\n}	 	\n// setUp(), testUno(),  tearDown()	 	\n/ / setUp(), testDue(),  tearDown()\n\nDATA  P R O VID ERD ATA  P R O VID ER	\nclass	 	DataTest	 	extends	 	TestCase	 	\n{	 	\n    	/**	 	\n     * 	@dataProvider	 getDataInput	 	\n     */	 	\n    	public	 	function	 	testAdd	($a, $b, $expected)	 	{	 	\n        	$this	->assertEquals($expecte d, $a + $b);	 	\n     }	 	\n    	public	 	function	 	getDataInput	()	 	{	 	\n        	return	 [	 	\n            [	0	, 	0	, 	0	],	 	\n            [	0	, 	1	, 	1	]	 	\n        ];	 	\n    }	 	\n}\n\nESE R CIZ IOE SE R CIZ IO	\nModi\0care la classe FilterTest utilizzando un 	data	\nprovider	 per veri\0care che i dati 	\"foo@bar.com\"	 e 	\"foo\"	\nsiano validi o meno\n\nMOCK  D I  O GGET TIM OCK  D I  O GGET TI	\nIl mocking di un oggetto Ã¨ una tecnica che consente di\ncreare una copia fasulla di un oggetto per \0nalitÃ  di\ntesting\nViene utilizzato per gestire le dipendenze esplicite delle\nclassi\nIn un test si evitano di utilizzare dipendenze con\nistanze reali di oggetti\n\nESE M PIOE SE M PIO	\nclass	 	Foo	 	{	 	\n    	public	 	function	 	__construct	(PDO $pdo)	 	\n    	{	 	\n        	$this	->pdo = $pdo;	 	\n    }	 	\n    	public	 	function	 	getAll	()	: 	array	 	\n    	{	 	\n        $sth = 	$this	->pdo->prepare(	\'SELECT * FROM table\'	);	 	\n        	// ...	 	\n    }	 	\n}\n\nESE M PIO  ( 2 )E SE M PIO  ( 2 )	\nclass	 	FooTest	 	extends	 	TestCase	 	\n{	 	\n    	public	 	function	 	setUp	()	 	\n    	{	 	\n        	$this	->pdo = 	$this	->createMock(PDO::class );	 	\n         	$this	->sth = 	$this	->createMock(PDOStateme nt::class);	 	\n         	$this	->pdo->method(	\'prepare\'	)	 	\n            ->willRetur n(	$ this	->sth);	 	\n        	$this	->foo = 	new	 Foo(	$this	->pdo);	 	\n    }	 	\n    	public	 	function	 	testGetAllReturnArray	()	 	\n    	{	 	\n        	$this	->assertIsArray(	$this	->foo->getAll());	 	\n    }	 	\n}\n\nCO DE C O VER AG ECO DE C O VER AG E	\nLa copertura del codice (	code coverage	) Ã¨ una misura	\nche indica la percentuale, espressa in righe di codice,\ndelle istruzioni eseguite durante un test\nEsempio una copertura dell\'80% indica che i test\nautomatici non eseguono il 20% del codice\nPHPUnit o\0re la possibilitÃ  di calcolare la code\ncoverage tramite il comando:	\nvendor/bin/phpunit --co verage-	t ext\n\nXD EB U GXD EB U G	\nPer eseguire la funzionalitÃ  di code coverage Ã¨	\nnecessario installare 	Xdebug\n\nESE R CIZ IOE SE R CIZ IO	\nInstallare o veri\0care la presenza di 	 ed eseguire	\nil code coverage dell\'esercizio precedente	\nXdebug\n\nESE R CIZ IO  ESE R CIZ IO  	\n(D A C O NSE G N AR E)(D A C O NSE G N AR E)	\nScriv e re  u na c la sse  p er g e stir e  u n s is te m a d i  a u te n tic a zio n e b asa to  s u  e m ail  e  p assw ord\nQ uesta  c la sse  d eve  im ple m en ta re  la  s e gu en te  in te rfa ccia :\nLe  e m ail  e  le  p assw ord  d evo n o e sse re  m em oriz za ti  in  u n d ata b ase\nL e  p assw ord  d evo n o e sse re  m em oriz za te  u tiliz za n do la  f u nzio n e 	 d el  P H P	\nCom ple ta re  l\'e se rc iz io  s criv e n do i  t e st a u to m atic i  c o n  l\'a u silio  d el 	\ni nterface	 Authenticate	 	\n{ \n    	public	 function	 verify	(string $email, string $password)	 : 	bool	 	\n} 	\np assw ord _h ash ()\nP H PU nit\n\nIN FO RM AZIO NI  E  C O NTA T TI:I N FO RM AZIO NI  E  C O NTA T TI:	\nenrico.zimuel@its-ictpiemonte.it	\n \n 	\n 	\nTh is  w ork  is  lic e n se d  u nder a	 	\n. 	\nI  u se d  	 t o  m ake  t h is  p re se n ta tio n .	\nC re ativ e  C om mon s A ttr ib u tio n -S h are A lik e  3 .0  U nporte d  L ic e n se	\nre ve al. js'),
(7, 'formulario.pdf', 'Formulario di Fisica Generale I\nCinematica Velocita: ~v= d~r dt\nAccelerazione: ~a= d~v dt\n=d\n2\n~r dt\n2\nMoto uniformemente accelerato\nv \0 v\n0 =\nat\nx \0 x\n0 =\nv\n0 \nt + 1 2\nat 2\nx \0 x\n0 = 1 2\n(\nv\n0 +\nv\nx )\nt\nv 2\nx \0\nv2\n0 = 2\na(x \0 x\n0)\nCorpo in caduta da fermo:\nv = p 2\ngh\nt = p 2\nh=g\nMoto del Proiettile\ny = xtan \0 g 2\nv 2\n0 cos 2\n x\n2\nh max =v\n2\n0 sin 2\n 2\ng\nx max =v\n2\n0 sin(2\n) g\nMoto Circolare\nVelocita angolare: != d dt\nAccel. angolare: = d! dt\n=d\n2\n dt\n2\nMoto Circolare Uniforme\n! = 2 =T\nv tangenziale =\n!r\na centripeta =\nv2\n=r =!2\nr\nMoto Circolare Unif. Accel.\n! \0 !\n0 =\nt\n \0 \n0 =\n!\n0 \nt + 1 2\nt 2\nMoto curvilineo\n~a = a\nT ^\n + a\nR ^\nr = d\nj~v j dt\n^\n \0 v\n2 r\n^\nr\nSistemi a piu corpi Massa totale: m\nT = P\nmi= R\ndm\nCentro di massa:\n~r C M = (P\nmi~r\ni)\n=m\nT= ( R\n~ridm\n)=m\nT\n~v C M =\nd~r\nC M =dt\n=P\nmi~v\ni=m\nT\n~a C M =\nd~v\nC M =dt\n=d2\n~r C M =dt2\nMomento di inerzia:\nI asse =P\nmir 2\ni = R\nr2\ndm\nTeorema assi paralleli:\nI asse =\nI\nCM +\nmD 2\nForze, Lavoro ed Energia Legge di Newton: ~\nF =m~a\nMomento della forza: ~= ~r ~\nF\nForze Fondamentali\nForza peso: F\ng =\nmg\nForza elastica: F\nel =\n\0k(x \0 l\n0 )\nGravita: ~\nF g =\n\0G M m r\n2 ^\nr\nElettrostatica: ~\nF E = 1 4\n\"\n0q\n1 q\n2 r\n2 ^\nr\nForze di Attrito\nStatico: j~\nF Sj \n\nSj~\nN j\nDinamico: ~\nF D =\n\0\nD j~\nN j^\nv\nViscoso: ~\nF V =\n\0~v\nLavoro\nL = R\nxf\nx i ~\nF d~\nl = R\nf\n i  d!\nForza costante: L= ~\nF ~\nl Forza elastica:\nL = \01 2\nk\n(x\nf \0\nl\n0 )2\n+ 1 2\nk\n(x\ni\0\nl\n0 )2\nForza peso: L= \0mgh\nGravita: L= Gm\n1m\n2\n1 r\nf \0\n1 r\ni \nElettrostatica: L= q\n1 q\n2 4\n\"\n0\n1 r\ni \0\n1 r\nf \nPotenza: P= dL dt\n=\n~\nF ~v =  !\nEnergia\nCinetica: K=1 2\nmv 2\nRotazione: K=\Z\n1 2\nm\nTv2\nCM +1 2\nI\nCM !2\n1 2\nI\nAsseFisso !2\nForze vive: K\nf\0\nK\ni=\nL\nTOT\nPotenziale: U=\0L = \0R\nxf\nx i ~\nF d~\nl\nMeccanica: E=K +U = 1 2\nmv 2\n+ U\nConservazione: E\nf \0\nE\ni=\nL\nNON CONS\nEn. potenziale forze fondamentali:\nForza peso: U(h ) = mgh\nForza elastica: U(x ) = 1 2\nk\n(x \0 l\n0 )2\nGravita: U(r ) = \0G m\n1m\n2 r\nElettrostatica: U(r ) = 1 4\n\"\n0\nq\n1 q\n2 r\nImpulso e Momento Angolare Quantita di moto: ~p= m~v\nImpulso: ~\nI = ~p\nf \0\n~p\ni = R\nt2\nt 1 ~\nF dt\nMomento angolare: ~\nL = ~r ~p\nIntorno ad un asse sso: j~\nL j= I\nasse \n!\nEquazioni cardinali\n~p T = P\n~pi =\nm\nT\n~v\nC M\n~\nL T = P\n~\nL i=\nI\nasse \n~!\nI card: P\n~\nF ext =\nd~p\nT=dt\n=m\nT\na\nCM\nII card: P\n~ext =\nd~\nL T=dt\nAsse sso: jP\n~ext j\n= I\nasse \n\nasse\nLeggi di conservazione ~pT = costante\n,P\n~\nF ext = 0\n~\nL T = costante\n,P\n~ext = 0\nE = costante ,L\nNONCONS = 0\nUrti Per due masse isolate ~p\nT = costante:\nAnelastico: v\nf = m\n1v\n1+\nm\n2v\n2 m\n1+\nm\n2\nElastico (conservazione energia):\n\Z\nm 1v\n1i +\nm\n2v\n2i =\nm\n1v\n1f +\nm\n2v\n2f\nm 1(\nv 2\n1 i \0\nv2\n1 f ) =\nm\n2(\nv 2\n2 f \0\nv2\n2 i)\n\Z v1f = m\n1\0\nm\n2 m\n1+\nm\n2v\n1i + 2\nm\n2 m\n1+\nm\n2v\n2i\nv 2f = m\n2\0\nm\n1 m\n1+\nm\n2v\n2i + 2\nm\n1 m\n1+\nm\n2v\n1i\nMoto Armonico x (t) = Acos \0\n!t +\n0\nv (t) = \0!A sin\0\n!t +\n0\na (t) = \0!2\nA cos \0\n!t +\n0\n= \0!2\nx (t)\nA = r x\n2\n0 + \nv0 !\n\n2 \n0 = arctan \n\0 v\n0 !x\n0\nf = != 2 , T = 2 =!\nMolla: != p k=m\nPendolo: != p g=L\nMomenti di inerzia notevoli Anello intorno asse: I= mr 2\nCilindro pieno intorno asse: I= 1 2\nmr 2\nSbarretta sottile, asse CM: I= 1 12\nmL 2\nSfera piena, asse CM: I= 2 5\nmr 2\nLastra quadrata, asse ?:I = 1 6\nmL 2\nGravitazione 3a\nlegge di Keplero: T2\n= \n4 2 GM\nS\nR 3\nVel. di fuga: v= q 2\nGM\nT R\nT\nElasticita Modulo di Young: F =A=Y L=L\nCompressibilita:  p= \0B  V =V\nModulo a taglio: F =A=M\nt\n x=h\nFluidi Spinta di Archimede B\nA =\n\Z\nL V g\nContinuita: Av = costante\nBernoulli: p+ 1 2\n\Zv 2\n+ \Zgy = costante\nOnde Velocita v, pulsazione !, lunghez-\nza d\'onda , periodo T, frequenza f,\nnumero d\'onda k.\nv = !=k ==T =f\n! = 2 =T ; k = 2=\nOnde su una corda\nVelocita: v= p T =\nSpostamento: y= y\nmax sin(\nkx\0!t )\nPotenza: P= 1 2\nv\n(!y\nmax )2\nOnde sonore\nVelocita: v= p B=\Z\n=p \r p=\Z\nv (T ) = v(T\n0)p T =T\n0\nSpostamento: s= s\nmax cos(\nkx\0!t )\nPressione:  P=  P\nmax sin(\nkx\0!t )\n P\nmax =\n\Zv!s\nmax\nIntensita: I= 1 2\n\Zv\n(!s\nmax )2\n= \nP2\nmax 2\n\Zv\nIntensita(dB): = 10 log\n10I I\n0\nSoglia udibile I\n0 = 1\n:0  10 \0\n12\nW =m 2\nEetto Doppler\nf 0\n= \nv+ v\nO cos\n\nO v\n\0 v\nS cos\n\nS \nf\n1\n\nTermodinamica\nPrimo principio\nCalore e cap. termica: Q=C T\nCalore latente di trasf.: L\nt=\nQ=m\nLavoro sul sistema:\ndW=\0pdV\nEn. interna:  U=\Z\nQ +W\nsulsistema\nQ \0W\ndelsistema\nEntropia:  S\nAB =Z\nB\nA dQ\nRE V T\nCalore specico\nPer unita di massa: c= C=m\nPer mole: c\nm =\nC=n\nPer i solidi: c\nm \n3R\nGas perfetto: c\np \0\nc\nV =\nR c\nV c\np \r\n= c\np =c\nV\nmonoatom. 3\n2\nR 5 2\nR 5 3\nbiatomico 5\n2\nR 7 2\nR 7 5\nGas perfetti\nEq. stato: pV=nRT =N k\nbT\nEnergia interna:  U=nc\nV\nT\nEntropia:  S= nc\nVln T\nf T\ni +\nnR lnV\nf V\ni\nIsocora (\nV= 0):\nW = 0 ; Q=nc\nv\nT\nIsobara (\np= 0):\nW =\0p V ;Q =nc\np\nT\nIsoterma (\nT= 0):\nW =\0Q =\0nRT lnV\nf V\ni\nAdiabatica (\nQ = 0): pV\r\n= cost.\nT V \r\n\0 1\n= cost. ; p1\n\0 \r\nT \r\n= cost.\nW =  U= 1 \r\n\0 1(\nP\nfV\nf \0\nP\niV\ni)\nMacchine termiche\nEcienza: = W Q\nH = 1\n\0Q\nC Q\nH\nC.O.P. frigorifero = Q\nC W\nC.O.P. pompa di calore= Q\nH W\nE. di Carnot: \nRE V = 1\n\0T\nC T\nH\nTeorema di Carnot:  \nRE V\nEspansione termica dei solidi\nEsp. lineare:  L=L\ni=\n T\nEsp. volumica:  V =V\ni=\n T\nCoecienti: = 3 \n gas perfetto, pcostante: = 1 =T\nConduzione e irraggiamento\nCorrente termica:\nP = \nQ \nt = \nT R\n=kA \nx\nT Resistenza termica:\nR= \nx kA\nResistenza serie: R\neq =\nR\n1+\nR\n2\nResistenza parallelo: 1 R\neq =\n1 R\n1 +\n1 R\n2\nLegge Stefan-Boltzmann: P=eAT 4\nL. onda emissione: \nmax =2\n:898 mmK T\nGas reali\nEq. Van Der Waals:\n( p + a( n V\n)2\n)( V \0nb ) = nRT\nCalcolo vettoriale Prodotto scalare:~\nA ~\nB =j~\nA jj~\nB jcos \n~\nA ~\nB =A\nxB\nx+\nA\nyB\ny+\nA\nzB\nz\nj ~\nA j= p ~\nA ~\nA = q A\n2\nx +\nA2\ny +\nA2\nz\nversore: ^\nA = ~\nA= j~\nA j\nProdotto vettoriale:\n~\nA  ~\nB =\n\n\n\n\n ^\ni ^\nj ^\nk\nA x A\ny A\nz\nB x B\ny B\nz\n\n\n\n\n\n~\nA  ~\nB = ( A\nyB\nz\0\nA\nzB\ny)^\ni\n+ ( A\nzB\nx\0\nA\nxB\nz)^\nj\n+ ( A\nxB\ny\0\nA\nyB\nx)^\nk\nCostanti siche\nCostanti fondamentali\nGrav.: G= 6 :67 10\0\n11\nm3\n= (s 2\nkg)\nVel. luce nel vuoto: c= 3 :00 108\nm =s\nCarica elementare: e= 1 :60 10 \0\n19\nC\nMassa elettrone: m\ne= 9\n:11 10 \0\n31\nkg\nMassa protone: m\np= 1\n:67 10\0\n27\nkg\nCost. dielettrica: \"\n0 = 8\n:85 10 \0\n12\nF=m\nPerm. magnetica: \n0 = 4\n 10\0\n7\nH =m\nCost. Boltzmann: k\nb = 1\n:38 10 \0\n23\nJ=K\nN. Avogadro: N\nA = 6\n:022 1023\nmol \0\n1\nC. dei gas: R= \Z\n8:314 J =(mol K)\n0 :082 L atm =(mol K)\nC. Stefan-Boltzmann:\n= 5 :6  10\0\n8\nW =(m 2\nK 4\n)\nAltre costanti\nAccel gravita sulla terra: g= 9 :81 m =s2\nRaggio terra: R\nT = 6\n:37 10 6\nm\nMassa terra: M\nT= 5\n:98 1024\nkg\nMassa sole: M\nS= 1\n:99 1030\nkg\nMassa luna: M\nL= 7\n:36 10 22\nkg\nVol. 1 mole di gas STP: V\nS T P = 22\n:4 L\nTemp 0 assoluto \n0 =\n\0273 :15 \nC Trigonometria\nsin 2\n( ) + cos 2\n( ) = 1 ;tan( ) = sin(\n) cos(\n)\nsin( \0) = \0sin( ), cos( \0) = cos( )\nsin(  ) = sin( ) cos( ) cos( ) sin( )\ncos(  ) = cos( ) cos( ) sin( ) sin( )\nsin( ) = cos( =2 ) = sin(  )\ncos( ) = sin( =2 ) = \0cos(  )\nsin 2\n( ) = 1\n\0 cos(2 ) 2\n, cos2\n( ) = 1+cos(2\n) 2\nsin( ) + sin( ) = 2 cos \n\0  2\nsin \n+  2\ncos( ) + cos( ) = 2 cos \n\0  2\ncos \n+  2\nDerivate d dx\nf\n(x ) = f0\n( x )\nd dx\n(\na x ) = af0\n( a x )\nd dx\nf\n(g (x )) = f0\n( g (x )) g 0\n( x )\nd dx\nxn\n= nx n\n\0 1\nd dx\n1 x\nn\n=\n\0n 1 x\nn\n+1\nd dx\nex\n= ex\nd dx\nln\nx= 1 x\nd dx\nsin(\nx) = cos( x)\nd dx\ncos(\nx) = \0sin( x)\nIntegrali\nZ\nf(x )dx =I(x )\nZ\nf(x \0 a)dx =I(x \0 a)\nZ\nf(a x )dx =I\n(a x ) a\nZ\nxn\ndx =x\nn\n+1 n\n+ 1 ; n\n6\n= \01\nZ 1 x\nn =\n\0 1 (\nn \0 1) \n1 x\nn\n\0 1; n\n6\n= 1\nZ 1 x\ndx\n= ln x\nZ\nex\ndx =ex\nZ sin( x)dx = cos( x)\nZ\ncos( x)dx =\0sin( x)\nZ x1\nx 0 f\n(x )dx =I(x\n1)\n\0 I(x\n0)\nApprossimazioni (x\n0 = 0)\nsin x= x+ O(x 2\n)\n(1 + x)\n= 1 + x+O(x 2\n)\nln(1 + x) = x+ O(x 2\n)\nFrancesco.Forti@pi.infn.it et al. Versione 2, 13 giugno 2011.\n2');
INSERT INTO `files` (`id`, `filename`, `content`) VALUES
(8, 'covid_circ.pdf', '1 	\n \n 	\n 	\nMinistero della Salute 	 	\nDIREZIONE GENERALE DELLA PREVENZIONE SANITARIA	 	\nUfficio 5	- Prevenzione malattie trasmissibili e profilassi internazionale	 	\n \nA \nUfficio di Gabinetto	 	\nSede	 	\n \nProtezione Civile	 	\nCoordinamento.emergenza@protezionecivile.it	 	\nprotezionecivile@pec.governo.it	  	\n \nMinistero Economia e Finanze	 	\nmef@pec.mef.gov.it	  	\n \nMinistero Sviluppo Economico	 	\ngabinetto@pec.mise.gov.it	  	\n \nMinistero Infrastrutture	 e 	\nTrasporti	 	\nufficio.gabinetto@pec.mit.gov.it	  	\n \nMinistero Del Lavoro e Politiche Sociali	 	\nsegreteriaministro@pec.lavoro.gov.it	  	\n \nMinistero 	dei Beni e Delle AttivitÃ  Culturali e d	el 	\nTurismo	 	\nmbac	-udcm@mailcert.beniculturali.it	  	\n \nMinistero degli Affari Esteri e della Cooperazione \nInternazionale	 	\ngabinetto.ministro@cert.esteri.it	  	\n \nMinistero  della  Difesa  Ispettorato  Generale  della \nSanitÃ  Militare 	 	\nstamadifesa@postacert.difesa.it	  	\n \nMinistero 	dellâ€™	Istruzione	 	\nuffgabinetto@postacert.istruzione.it	  	\n \nMinistero	 dellâ€™	UniversitÃ  e della Ricerca	 	\nuffgabinetto@postacert.istruzione.it	  	\n \nMinistero dellâ€™	Interno	 	\ngabinetto.ministro@pec.interno.it	  	\n \nMinistero	 della Giustizia	 	\ncapo.gabinetto@giustiziacert.it	  	\n \nDipartimento dell\'	Amministrazione 	Penitenziaria	 	\nDirezione Generale 	dei 	Detenuti 	e del 	Trattamento	 	\nMinistero Della Giustizia	 	\nprot.dgdt.dap@giustiziacert.it	  	\ngabinetto.ministro@gi	ustiziacert.it	  	\n \nMinistero dello Sviluppo Economico	 	\ngabinetto@pec.mise.gov.it	  	\n \nMinistero  delle  Politiche  Agricole,  Alimentari  e \nForestali	 	\nministro@pec.politicheagricole.gov.it	  	\n \nMinistero  dellâ€™	Ambiente  e  della  Tutela 	del 	\nTerritorio 	e del 	Mare	 	\nsegreteria.ministro@pec.minambiente.it	  	\n \nPresidenza  Consiglio  dei  Ministri 	- Dipartimento	 	\nper gli Affari Regionali e le Autonomie	 	\naffariregionali@pec.governo.it	  	\n \nAssessorati  alla  SanitÃ   Regioni	 Statuto  Ordinario 	\ne Speciale	 	\nLORO SEDI	 	\n \nAssessorati alla SanitÃ  Province	 Autonome Trento 	\ne Bolzano	 	\nLORO SEDI	 	\n \nAssociazione Nazionale Comuni Italiani	 (ANCI)	 	\nanci@pec.anci.it	  	\n \nU.S.M.A.F. 	â€“ S.A.S.N. 	Uffici di SanitÃ  Marittima, 	\nAerea e di Frontiera	 	\nLORO SEDI	 	\n \nUfficio Nazionale per la Pastorale della Salute	 	\nCo	nferenza Episcopale Italiana	 	\nsalute@chiesacattolica.it	   	\n \n \n 	\n0000644-08/01/2021-DGPRE-DGPRE-P\n\n2 	\n \nDon Massimo Angelelli	 	\nDirettore Ufficio Nazionale per la Pastorale della \nSalute 	 	\nm.angelelli@chiesacattolica.it	 	\n \nFederazione  Nazionale  Ordine  dei  Medici \nChirurghi e degli Odontoiatri	 	\nsegreteria@pec.fnomceo.it	  	\n \nFNOPI 	Federazione Nazionale Ordini Professioni 	\nInfermieristiche	 	\nfederazione@cert.fnopi.it	  	\n \nFNOPO 	Federazione Nazionale degli Ordini della 	\nProfessione di Ostetrica	 	\npresidenza@pec.fnopo.it	  	\n \nFOFI 	Federazione Ordini Farmacisti I	taliani	 	\nposta@pec.fofi.it	  	\n \nDirezione  generale  dei  dispositivi  medici  e  del \nservizio farmaceutico DGDMF	 	\nSEDE	 	\n \nFederazione  Nazionale  Ordini  dei  TSRM  e  delle \nProfessioni  Sanitarie  Tecniche,  della \nRiabilitazione  e  della  Prevenzione \nfederazione@pec.tsrm.org	 	\n \nAzienda  Ospedaliera 	- 	Polo  Universitario 	\nOspedale Luigi Sacco	 	\nprotocollo.generale@pec.asst	-fbf	-sacco.it	  	\n \nComando Carabinieri Tutela della	 Salute	 â€“ NAS 	 	\nsrm20400@pec.carabinieri.it	  	\n \nIstituto Superiore	 di SanitÃ 	 	\nprotocollo.centrale@pec.iss.it	  	\n \nIstituto  Nazionale  per  le  Malattie  Infettive 	â€“ 	\nIRCCS â€œLazzaro 	Spallanzaniâ€	 	\ndirezionegenerale@pec.inmi.it	  	\n \nCentro Internazionale Radio Medico 	(CIRM)	 	\nfondazionecirm@pec.it	  	\n \nIstituto  Nazionale  per  la  promozione  della 	salute 	\ndelle  popolazioni  migranti e  per il  contrasto	 delle 	\nmalattie della povertÃ 	 (INMP)	    	\ninmp@pec.inmp.it	  	\n \nFederazione	 delle	 SocietÃ   Medico	-Scientifiche 	\nItaliane	 (FISM)	 	\nfism.pec@legalmail.it	  	\n \nConfartigianato	 	\npresidenza@confartigianato.it	  	\n \n \n 	\n \n \n \n \nCONFCOMMERCIO	 	\nconfcommercio@	confcommercio.it	 	\n \nEnte Nazionale per lâ€™	Aviazione 	Civile	 - ENAC	 	\nprotocollo@pec.enac.gov.it	 	\n \nTRENITALIA	 	\nufficiogruppi@trenitalia.it	 	\n \nITALO 	- Nuovo Trasporto 	Viaggiatori SpA	 	\nitalo@pec.ntvspa.it	  	\n \nDirezione Generale Programmazione Sanitaria \nDGPROGS	 	\nSEDE	 	\n \nSIMIT 	â€“ SocietÃ   Italiana  di  Malattie  Infettive  e 	\nTropicali	 	\nsegreteria@simit.org	  	\n \nSocietÃ  Italiana di Medicina e SanitÃ  Penitenziaria \n(Simspe	-onlus)	 	\nVia Santa Maria della Grotticella 65/B	 	\n01100 Viterbo	  	\n \nOrdine Nazionale dei Biologi	 	\nprotocollo@peconb.it	  	\n \nANTEV Associazione Nazionale Tecnici \nVerificatori 	- PRESIDENTE 	\npresidente@antev.net	  	\n \nSocietÃ  Italiana di Anestesia Analgesia \nRianimazione e Terapia Intensiva	 	\nsiaarti@pec.it	  	\n \nAgenzia nazionale per i servizi sanitari regionali	 	\nAGENAS	 	\nagenas@pec.agenas.it	  	\n \nFederazione Nazionale degli Ordini dei CHIMICI \ne dei FISICI	 	\nsegreteria@pec.chimici.it	 	\n \nDipartimento Per Le Politiche Della Famiglia	 	\nROMA	 	\nsegredipfamiglia@pec.governo.it	 	\n \nRegione Veneto 	â€“ Assessorato alla sanitÃ 	 	\nDirezione Regionale Prevenzione 	 	\nCoordinamento Int	erregionale della Prevenzione	 	\nfrancesca.russo@regione.veneto.it	  	\ncoordinamentointerregionaleprevenzione@region\ne.veneto.	it\n\n3 	\n \n \n \nOGGETTO: 	Indicazioni operative relative al	 rischio di diffusione di 	nuove varianti SARS	-CoV	-	\n2 	in 	Unione  europea/Spazio  Economico  Europeo  (	UE/SEE	): 	misure  di  prevenzione  per  i 	\nviaggiatori e 	sorveglianza di laboratorio	.  	\n \nVariante 	VOC 202012/01	, Regno Unito	 	\nIl  Regno  Unito  (UK)  ha 	riportato  un  rapido  incremento  dei  casi 	COVID	-19  nel	le  aree  del  S	ud	-Est, 	\ndellâ€™	\'Est  e	 di 	Londra, 	associato 	all\'emergere  di 	una  nuova  variante  SARS	-CoV	-2,  VOC  202012/01	 	\n(Variant  Under  Investigation,  year  2020,  month  12,  variant  01	). I primi  casi  sono  stati  identificati  a 	\nfine  settembre 	e  a	lla  data  del  2	6  dicembre  2020	 sono  stati  segnalati	 piÃ¹  di  3000  casi 	appartenenti  a 	\nquesto 	nuovo cluster filogenetico	.1 	\nQuesta nuova variante Ã¨ definita dalla presenza di mutazioni multiple della proteina 	spike 	(delezione 	\n69	-70, delezione 144, N501Y, A570D, D614G, P681H, T716I, S982A, D1118H) oltre che di mutazioni 	\nin  altre  regioni  del  genoma. 	Una  delle  mutazioni 	(N501Y)	 si  trova  allâ€™interno  del  sito  di  legame  del 	\nrecettore. 	La	 presenza d	ella	 delezione 69	-70 nella proteina 	spike	 ha determinato  risultati negativi nei 	\ntest RT	-PCR basati sul rilevamento del gene S. 	2 	\nNon  sono  stati  riportati  ad  ogg	i  un  peggior  andamento  clinico,  una  mortalitÃ   piÃ¹  elevata  o  gruppi  di 	\npopolazione  particolarmente  colpiti.  Al  momento  non  sono  disponibili  informazioni  sull\'eventuale \naumento  della  frequenza  di  reinfezioni  associate  a  VUI  202012/01  o  sull\'impatto  sui  progr	ammi  di 	\nvaccinazione  in  corso.  Le  analisi  preliminari  condotte  nel  Regno  Unito,  tuttavia,  suggeriscono  che \nquesta variante sia significativamente piÃ¹ trasmissibile rispetto alle precedenti varianti	, ma finora non 	\nÃ¨  stat	a identificat	a una  maggiore	 gravitÃ   d	ell\'infezione.	 I  casi  affetti  dalla  variante  virale  sono  nella 	\nmaggior  parte  identificati  in  persone  di  etÃ   minore  di  60  anni.  I  modelli  matematici  mostrano \nunâ€™associazione fra maggiore incidenza e presenza della variante.	 	\nIl Regno Unito ha raccomandato di	 sequenziare almeno 300	-1000 campioni	/mese ed	 ha rafforzato 	tutte 	\nle misure di sanitÃ  pubblica	. 	\n                                        	                  	 	1 European Centre for Disease Prevention and Control. Risk related to spread of new SARS	-CoV	-2 variants of concern in	 	\nthe  EU/EEA 	â€“ 	29  December  2020. 	ECDC:  Stockholm;  2020. 	Disponibile  presso: 	\nhttps://www.ecdc.europa.eu/sites/defaul	t/files/documents/COVID	-19	-risk	-related	-to-spread	-of-new	-SARS	-CoV	-2-	\nvariants	-EU	-EEA.pdf	 	\n 2 European Centre for Disease Prevention and Control. Rapid increase of a SARS	-CoV	-2 variant with multiple	 spike protein 	\nmutations  observed  in  the  United  Kingdom 	â€“ 20 	December  2020. 	ECDC:  Stockholm;  2020.  Disponibile  presso: 	\nhttps://www.ecdc.europa.eu/sites/default/files/documen	ts/SARS	-CoV	-2-variant	-multiple	-spike	-protein	-mutations	-United	-	\nKingdom.pdf\n\n4 	\n \nLâ€™ECDC ha segnalato che al 7 gennaio 2021 la variante VOC202012/01 Ã¨ stata segnalata in 43 Paesi, \ndi  cui  19  dellâ€™UE.	 Secondo  le  informazioni  condivise  durante 	la  riunione  del  Comitato  di  sicurezza 	\nsanitaria del 6 gennaio 2021, attualmente si considera che questa variante si sia diffusa a livello globale.	 	\nVariante 	501.V2	, Sudafrica	 	\nLe AutoritÃ  Sudafricane hanno identificato una nuova variante di SARS	-CoV	-2, 	denominata	 501.V2, 	\nda campioni 	prelevati	 tra il 15 ottobre e il 25 novembre 	2020	. Sono state osservate mutazioni multiple 	\ndella proteina 	spike	 in piÃ¹ di 190 campioni provenienti da 3 province del Paese.	 Dai primi di novembre, 	\nla  suddetta  variante  si  config	ura  come  variante  dominante  tra  i  campioni  positivi  sequenziati, 	\npresentandosi in piÃ¹ del 90% dei sequenziamenti nella settimana con inizio il 16 novembre.	1 	\nLa nuova variante del virus SARS	-CoV	-2 rilevata in Sud Africa Ã¨ denominata variante SARS	-CoV	-2 	\n501.	V2. Ãˆ	 definit	a dalla presenza di mutazioni multiple 	della proteina	 spike	 presenti in tutti i virus nel 	\ncluster (D80A, D215G, E484K, N501Y e	 A701V) e 	da ulteriori mutazioni rilevate 	in virus raccolti piÃ¹ 	\nrecentemente (	L18F, R246I, K417N e eliminazione 242	- 244). Tre delle	 mutazioni	 (K417N, E484K e 	\nN501Y) si trovano all\'interno d	el sito di legame del recettore	.  	\nRisultati preliminari indicano che questa v	ariante sia	 associata a una carica virale piÃ¹ elevata e a	d una 	\nmaggiore  trasmissibilitÃ 	,  ma 	non  ci  sono  prove  che 	lâ€™infezione  da 	501.V2 	sia	 associat	a a maggiore 	\ngravitÃ 	 della malattia	.  	\nSecondo  lâ€™ECDC,  al  7  gennaio  2021  la	 variante  del  Sud  Africa  Ã¨  presente  in  11  Paesi,  di  cui  4 	\ndellâ€™UE/SEE (F	inlandia	, F	rancia	, S	vezia	 e N	orvegia	). 	\nIl Centro Europ	eo per la Prevenzione e il Controllo delle Malattie (	ECDC	) valuta che la 	probabilitÃ  di 	\nintroduzione e ulteriore diffusione d	elle varianti 	VOC 202012/01 e 501.V2 	in EU/EEA 	sia 	attualmente 	\nalta	. Sebbene non vi siano 	evidenze 	di un decorso della malattia COV	ID	-19 piÃ¹ grave determinato	 da 	\nqueste  varianti	, la  possibilitÃ   di  una  maggiore  trasmissione  virale  puÃ²  avere  un 	impatto  in  termini  di 	\nricoveri  e  decessi,  in  particolare  tra	 i gruppi  di  etÃ   piÃ¹  avanzata  o  con  comorbi	ditÃ 	. Il  rischio 	\ncomplessivo	 associato 	all\'introduzione  e  all\'ulteriore  diffusione  di  SARS	-CoV	-2  VOC  202012/01  e 	\n501.V2 Ã¨	, quindi	, valutato come alto.	  	\nOltre a raccomandare le comuni misure di igiene e profilassi e le fondamentali azioni di sanitÃ  pubblica, \nlâ€™OMS  incoraggia  tutti  gli  Stati  ad  a	umentare  il  sequenziamento  del  virus,  dove  possibile,  e  di 	\ncondividere i dati a livello internazionale. 	 	\nAl  fine  di  rafforzare  la  sorveglianza  nei  confronti  dell	e nuove  varianti  SARS	-CoV	-2 	si  forniscono 	\npertanto le seguenti indicazioni:\n\n5 	\n \n1. Rafforzamento del	le attivitÃ 	 di identificazione	 di casi e contatti	: 	\nI Dipartimenti di Prevenzione delle ASL e i MMG/PLS sono invitati a:	 	\nï‚· 	verificare  la  presenza  di  link  epidemiologico	: le  persone  con  un  collegamento  epidemiologico  a 	\ncasi  con  diagnosi  di  COVID  VUI  202012/01	 o  di  COVID  501.V2  o 	con 	una  storia  di  viaggio  in 	\naree 	in  cui 	sia	 nota  la  presenza  dell	e nuov	e variant	i viral	i devono  essere  immediatamente 	\nidentificate per testare	 e isolare 	i contatti	 esposti;	 	\nï‚· 	effettuare  sorveglianza  attiva 	dei  viaggiatori 	provenienti  da	l  Regno  Unito  di  Gran  Bretagna  e 	\nIrlanda del Nord	 in quarantena	, a prescindere dallâ€™esito del test effettuato allâ€™arrivo	; eseguire test 	\ndiagnostico  molecolare  al  termine 	della  quarantena	.3 Tale  misura  va  estesa  anche  a  tutti  i 	\nviaggiatori provenienti da pa	esi in cui sia nota la presenza delle nuove varianti virali.	 	\n 	\n2. Rafforza	mento	 del	la sorveglianza di laboratorio	: 	\nI Laboratori di Riferimento sono invitati a: 	 	\nï‚· 	non utilizzare test basati sull	a sola 	identificazione del gene 	target 	S;	 	\nï‚· 	eseguire in modo 	tempestivo il	 sequenzia	mento 	del genoma virale	:  	\n1) ne	i casi COVI	D 	con	 storia di viaggio	 in aree in cui Ã¨ nota la presenza d	i nuov	e variant	i virali	 o 	\nche presentano 	un 	link	 epidemiologico	 a casi 	COVID	-19 riconducibili a	 nuov	e variant	i;  	\n2) nei casi COVID che 	alla diagnosi di laboratorio siano risultati negativi al target genico S;	 	\n3) nei casi	 COVID	 con	 sospetta reinfezione SARS	-CoV	-2;  	\n4) nei casi COVID da aree con 	un 	aumento significativo dellâ€™incidenza o in caso di focolai	; 	\n4) nei casi COVID giÃ 	 sottopost	i a vaccinazione anti	-COVID	-19	, per identificare possibili mancate 	\ncoperture vaccinali e 	breakthrough infection	s (infezioni resistente alla profilassi)	. I virus isolati 	\nda questi casi dovrebbero essere sequenziati e caratterizzati geneticamente e antigenicamen	te; 	\nï‚· 	comunicare tempestivamente allâ€™I	stituto 	Superiore di 	SanitÃ  (ISS)	 e al Ministero della Salute, per 	\nla successiva  condivisione di  informazioni a livello europeo e internazionale, 	lâ€™individuazione di 	\nuna nuova variante virale con i relativi dati epidemio	logici del caso e inviare il campione positivo 	\na ISS 	per la coltura virale	 e test di neutralizzazione	;  	\nï‚· 	condividere la relativa sequenza con 	lâ€™ISS o, in alternativa, inviare i campioni allâ€™ISS per ulteriori 	\nindagini genomiche e per le colture virali	 e test	 di neutralizzazione	; 	\nï‚· 	inviare 	mensilmente un campione 	random 	di tamponi positivi 	per	 SARS	-CoV	-2 allâ€™I	SS	, al fine di 	\nidentificare mutazioni del virus 	circolante	. SarÃ  necessario 	inviare	 ogni mese	 i primi 1	0 campioni 	\nconsecutivi  risultati  positivi	 insieme  alle 	informazioni  richieste,  compreso  il  codice  ECV  di 	\n                                        	                  	 	3 ORDINANZA  23  dicembre  2020  Ulteriori  misure  urgenti  in  materia  di  contenimento  e  gestione  dell\'emergenza \nepidemiologica  da  COVID	-19.  (20A07212)  (GU  Serie  Generale  n.318  del  23	-12	-2020)	 	\nhttps://www.gazzettaufficiale.it/eli/id/2020/12/23/20A07212/SG\n\n6 	\n 	\nnotifica,  al  fine  di  fornire  i  dati  epidemiologici  necessari.	 per  ognuna  delle  Regioni  e  Province 	\nAutonome	 e 	con  una  certa  rappresentativitÃ   geografica  a	llâ€™interno  di  ogni  Regione	. Lâ€™ISS 	\ninfor	merÃ  tempestivamente il Ministero della Salute delle mutazioni individuate.	 	\n In ogni Regione sono stati identificati diversi laboratori di riferimento per SARS	-CoV	-2 per affrontare 	\nla diagnosi su un crescente numero di tamponi eseguiti e, quindi, si dovrÃ  	provvedere ad	 una turnazione 	\ndei laboratori per lâ€™invio dei tamponi mensili per una certa rappresentativitÃ . Ãˆ demandata alle singole \nRegioni lâ€™organizzazione della turnazione dei laboratori.	 Il Laboratorio Nazionale di Riferimento per 	\nSARS	-CoV	-2,  presso  l	â€™Istituto  Superiore  di  SanitÃ ,  provvederÃ   ad  effettuare  su  tutti  i  campioni  la 	\nconferma  diagnostica  e  la  sequenza  genomica  per  evidenziare 	la  presenza  di 	eventuali  mutazioni.	 I 	\nrisultati  delle  analisi  verranno  comunicati  ai  laboratori  che  hanno 	inviato 	i campioni.  Le  sequenze 	\nvirali, inoltre, saranno rese disponibili alla comunitÃ  scientifica.	 	\nI  campioni  potranno  essere  inviati  a:	 Istituto  Superiore  di  SanitÃ ,	 Via  del  Castro  Laurenziano,  10 	â€“ 00161 	\nRoma	 Dipartimento Malattie Infettive	 - Allâ€™attenzione 	Dr.ssa Angela Di Martino	;  	\nOgni  invio  sarÃ   accompagnato  dalla  scheda  informazioni  contenente  i  seguenti  dati: 	Regione  o  P.A. 	-â€“ 	\nLaboratorio  	-  CittÃ   	- Responsabile Laboratorio	 - Telefono 	- e-mail	; Mese	 - Data prelievo tampone (gg/m/aa) 	-  	\nData di nascita	 caso (gg/m/aa) 	- Codice tampone 	- Ct	-Realtime (se disponibile);	 una 	copia cartacea 	della scheda 	\nsarÃ   inclusa  nellâ€™invio  e  una  versione  elettronica  in	 	formato	 	excel	 	sarÃ   inviata  vi	a  mail 	\nallâ€™indirizzo	 angela.dimartino@iss.it	. 	\nEventuali  integrazioni 	o  modifiche  nella  selezione  dei  campioni  positivi  random  da  sequenziare 	\npotranno essere definite con ulteriori comunicazioni.	 	\n \nSi  prega  di  voler  dare  la  massima  diffusione  alla  presente  nota  circolare  ai 	servizi  ed  ai  soggetti 	\ninteressati.	 	\n \n 	 	 	 	 	 	 	 	IL DIRETTORE GENERALE 	 	\n  *F.to 	Dott. Giovanni Rezza	 	\nIl Direttore dellâ€™Ufficio 5	 	\nDott. Francesco Maraglino	 	\n \nReferenti/Responsabili del procedimento:	 	\nAnna Caraglia	 	\nPatrizia Parodi	 	\nMonica Sane Schepisi 	 	\nJessica Iera	 	\nAlessia Dâ€™Alisera	 	\n \n*firma autografa sostituita a mezzo stampa ai sensi dellâ€™art.3, comma 2, del D. Lgs n.39/1993'),
(9, 'alpha.pdf', 'Scheda Tecnica ALPHA BL GROND 01/2015                                                                                                                                                                                                        Pag. 1 di 4\nALPHA BL GROND\nFondo pigmentato allâ€™acqua a base di resine in emulsione e pigmenti selezionati, con ottime\nproprietÃ  isolanti su superfici murali allâ€™interno\nCaratteristiche del prodotto\nComposizione:	A base di resina stirolo-acrilica emulsionata con tecnologia E.B.S.\n(Em ulsified Binding System), e pi gmenti i norganici	\nPrincipali proprietÃ :	\n-  Di aspetto opaco\n-  Isola e uniforma lâ€™assorbimento dei supporti\n- Insaponificabile\n-  Fav ori sce unif ormitÃ  di colore e copertura di pitture e finiture decorativ e\n-  Fondo specifico per alcune finiture decorative (ALPHA TACTO, ALPHA	\nDESERT, ALPHA NAKRá¸–, ALPHA ALIZÃ‰, â€¦)	\nCaratteristiche fisiche\nViscositÃ :	Brookfield 2000 â€“ 2800 cps a 23Â°C	\nMassa volumica (densitÃ ):	1,37 Â± 0,05 kg/dm	3	\nContenuto solido:	33,5 Â± 2% in volume; 47 Â± 2% in peso	\nEssiccazione a 23Â°C / 65% U.R.:	Secco al tatto: 1 - 2 ore	\nSovrapplicazione:	Dopo 12 ore con altri tipi di prodotto.\nDopo 6 ore tra due mani di ALPHA BL GROND	\nColorazione:	Unicamente con il  sistema tintometri co Acomix di Akzo Nobel\nimpiegando le basi W05, N00 e M15	\nConfezioni:	1; 2,5 e 10 l	\nValore limite UE per il contenuto COV:	 Cat. A/g: 30 g/l (2010). Questo prodotto contiene al massimo 30 g/l	\ndi COV\nBrillantezza:	G3Opaco	â‰¤ 10 G.U. 85Â°	\nSpessore del film secco:	E1	< 50 Âµm	\nModo d\'impiego\nMetodi di applicazione:	A pennello, a rullo a pelo medio e spruzzo (airl ess).\nEâ€™ consigliabile lâ€™applicazione a pennello, in particolare quando i\nsupporti interessati evidenziano un assorbimento accentuato.\nApplicazione ad airless: Ugello 0,46 â€“ 0,53 mm (0,018 â€“ 0,021 pollici)\nPressione: 160 â€“ 180 bar.	\nDiluizione:	Dal 10 al  30% in v olume con acqua.\n\nScheda Tecnica ALPHA BL GROND 01/2015                                                                                                                                                                                                        Pag. 2 di 4\nResa:	10 â€“ 12 mÂ²/l per mano.\nLa resa puÃ² variare in base alle caratteristiche di ruviditÃ , porositÃ  e\nassorbimento dei supporti e al si stema di applicazi one adottato.	\nCondizioni ambientali\nper lâ€™applicazione:	Temperatura da 5 a 30 Â°C; UmiditÃ  Rel ativ a max. 85%	\nPulizia degli attrezzi:	Con acqua subito dopo lâ€™utilizzo.	\nConservazione:	In confezioni ben chiuse, in luogo fresco ed asciutto, al riparo dal gelo\ne da fonti di cal ore.	\nCompatibilitÃ :	Con nessun altro prodotto.\nEv entuali miscelazi oni	alterano le caratteristiche tecniche e le qualitÃ 	\ndel prodotto.	\nAvvertenze:	ALPHA BL GROND va applicato su supporti perfettamente asciutti,\nstagionati e compatti.\nNon applicare su fondi sfarinanti nÃ© su rasanti poveri, per i quali\noccorre impiegare come fondo ALPHA GROND.\nOperazioni quali carteggiatura, sabbiatura, rimozione con fiamma,\necc., dei vecchi strati di pitture, possono generare polveri e/o fumi\npericolosi. Lavorare in ambienti ben v entilati e indossare\nnecessariamente gli idonei mezzi di protezione individuale. Per\nmaggiori inf orm azi oni relativ e al  corretto sm altim ento, stoccaggio e\nmanipolazione del prodotto, si prega di consultare la relativa Scheda di\nSicurezza.	\nSistemi di applicazione\nPreparazione:\nIntonaci nuov i con finitura al civ ile e gesso compatti	\nÂ·  Attendere la totale stagionatura; accurata spazzol atura per rimuov ere le incoerenze; applicare come	\nfondo una mano di ALPHA BL GROND diluito massimo al 30% in v olum e con acqua, nel colore\ncorri spondente al colore della finitura	\nIntonaci, cartongesso e rasature a gesso irregolari	\nÂ·  Uniformare le superfici rasandole con POLYFILLA PRO E200 o ALPHA STUCCO, attendere la totale	\nessiccazione e carteggiare per eliminare sbavature ed eccedenze di stucco; applicare come fondo una\nmano di ALPHA BL GROND diluito massimo al  30% i n volume con acqua,  nel colore corrispondente al\ncolore della finitura	\nVecchie pitture traspiranti di buona qualitÃ  o lavabili ben ancorate	\nÂ·  Stuccare eventuali buchi e irregolaritÃ  con POLYFILLA PRO E200, F200, F210 o ALPHA STUCCO;	\nattendere la totale essiccazione e carteggiare per eliminare sbavature ed eccedenze di stucco; isolare le\nstuccature con ALPHA BL GROND diluito massimo al 30% in v olum e con acqua	\nÂ·  Applicare a pennello o rullo su tutta la superficie una mano di ALPHA BL GROND diluito massimo al 30% in	\nv olum e con acqua, nel colore corrispondente al colore della finitura	\nVecchie pitture a tempera	\nÂ·  Rimozi one delle pitture a tempera tramite raschiatura dopo av erl e prev entiv amente inumidite; isol are la	\nsuperficie con  IMPREGNANTE ALPHATEX SF diluito al 400% in volume con acqua; uniformare le\nsuperfici rasandole con POLYFILLA PRO E200 o ALPHA STUCCO	\nÂ·  Applicare a pennello o rullo su tutta la superficie una mano di ALPHA BL GROND diluito massimo al 30% in	\nv olum e con acqua, nel colore corrispondente al colore della finitura	\nFiniture:\n\nScheda Tecnica ALPHA BL GROND 01/2015                                                                                                                                                                                                        Pag. 3 di 4	\nÂ·  Applicare a finire una delle finiture per interni di natura organica o uno degli effetti decorativ i dell a	\ngamma Sikkens (adottando quanto riportato nelle rispettiv e Schede Tecniche)	\nNota Bene\nTutte le informazioni contenute in questo documento hanno carattere puramente indicativo e riportano solo\nalcuni esempi di supporto che non rappresentano la totalitÃ  delle situazioni che in pratica potrebbero essere\ninteressate, pertanto qualora si rendesse necessario intervenire su supporti non indicati o si rendessero\nnecessari ulteriori chiarimenti Vi invitiamo a contattare il ns. Servizio di Assistenza Tecnica. Inoltre, per la\ncorretta preparazione dei supporti e lâ€™applicazione dei prodotti v algono le regole della posa a regola dâ€™arte,\ncosÃ¬ come riportato nel quaderno di Sikkens \"La preparazione dei supporti in muratura\", che vi invitiamo a\nconsultare.\nDicitura da inserire nei capitolati dâ€™appalto e preventivi\nFondo pigmentato allâ€™acqua a base di resine in emulsione e pigmenti selezionati, con ottime proprietÃ  isolanti su\nsuperfici murali allâ€™interno (Tipo ALPHA BL GROND)\nCaratteristiche fisiche\nViscositÃ :	Brookfield 2000 â€“ 2800 cps a 23Â°C	\nMassa volumica (densitÃ ):	1,37 Â± 0,05 kg/dm	3	\nContenuto solido:	33,5 Â± 2% in volume; 47 Â± 2% in peso	\nEssiccazione a 23Â°C / 65% U.R.:	Secco al tatto: 1 - 2 ore	\nSovrapplicazione:	Dopo 12 ore\nDopo 6 ore tra due mani di ALPHA BL GROND	\nColorazione:	Unicamente con il  sistema tintometri co Acomix di Akzo Nobel\nimpiegando le basi W05, N00 e M15	\nConfezioni:	1; 2,5 e 10 l	\nValore limite UE per il contenuto COV:	 Cat. A/g: 30 g/l (2010). Questo prodotto contiene al massimo 30 g/l	\ndi COV\nBrillantezza:	G3Opaco	â‰¤ 10 G.U. 85Â°	\nSpessore del film secco:	E1	< 50 Âµm	\nL\'efficacia dei nostri prodotti e sistemi Ã¨ basata su anni di esperienza pratica e ricerca condotta nei nostri laboratori.\nGarantiamo che la qualitÃ  del lavoro realizzato con i nostri prodotti, soddisfa i requisiti dâ€™idoneitÃ  previsti da Akzo Nobel\nCoatings S.p.A., a condizione che tutte le istruzioni da noi impartite siano correttamente seguite e il lavoro sia stato\neseguito secondo perizia e professionalitÃ . Nel caso in cui il risultato finale sia stato influenzato negativamente da\ncircostanze indipendenti dalla nostra volontÃ , ogni e qualsiasi responsabilitÃ  Ã¨ espressamente esclusa e declinata.\nLâ€™acquirente Ã¨ tenuto a verificare se i prodotti consegnati sono adatti per l\'uso previsto.\nCi riserviamo di modificare il contenuto del presente documento, senza alcun preavviso. Non appena una nuova versione\ndi questa scheda tecnica sarÃ  disponibile, questa non sarÃ  piÃ¹ valida.\n\nScheda Tecnica ALPHA BL GROND 01/2015                                                                                                                                                                                                        Pag. 4 di 4	\nAkzo Nobel Coatings SpA	Via G. Pascoli, 11	T +39 0322 401611	\nDecorative Paints	28040 Dormelletto (NO)	F +39 0322 401607	\nwww.sikkens.it\nwww.sikkensdecor.it\nservizio.clienti@akzonobel.com'),
(10, 'ricceta.pdf', 'Receitas\n\nÃ­ndice	\nâ€¢	Torta americana	\nâ€¢	Pizza na frigideira\n\nTorta Americana\n\nâ€¢	Ingredientes da Massa	\nâ€¢	2 xÃ­caras de farinha de trigo	\nâ€¢	1/4 xÃ­cara de gordura vegetal	\nâ€¢	3/4 xÃ­cara de creme vegetal	\nâ€¢	1/3 xÃ­cara de leite de soja	\nâ€¢	1 colher (chÃ¡) de suco de limÃ£o	\nâ€¢	1 colher (chÃ¡) de sal	\nâ€¢	Caramelo (para pincelar)\n\nâ€¢	Ingredientes do Recheio	\nâ€¢	1 xÃ­cara de aÃ§Ãºcar	\nâ€¢	1 xÃ­cara de cereja em calda	\nâ€¢	1 xÃ­cara de morango picado	\nâ€¢	1 kiwi picado	\nâ€¢	3 colheres (chÃ¡) de maisena	\nâ€¢	2 colheres (chÃ¡) de suco de laranja	\nâ€¢	1 colher (chÃ¡) de raspa de laranja	\nâ€¢	1 colher (chÃ¡) de canela\n50ml de creme de soja	\nâ€¢	1/4 colher (chÃ¡) de essÃªncia de baunilha	\nâ€¢	Uma pitada de sal\n\nâ€¢	Modo de Preparo da Massa	\nâ€¢	Misture o leite com o limÃ£o, reserve. Bata no \nliquidificador a farinha, o sal, a gordura e o \ncreme vegetal, bata e mexa ocasionalmente \ncom uma colher. Despeje a mistura de leite \ncom limÃ£o e continue o processo atÃ© virar \numa massa, separe a massa em duas (sendo \num a parte bem maior do que a outra) e \nembale com plÃ¡stico, deixe por 30 minutos.\n\nâ€¢	Modo de Preparo do Recheio	\nâ€¢	Misture todos os ingredientes, pronto, rs.	\nâ€¢	Montagem	\nâ€¢	Abra metade da massa em uma assadeira de fundo \nremovÃ­vel (pode ser outra ta ;P), coloque o recheio e \ncubra com o restante da massa, pincele com caramelo e \nleve para assar por cerca de 40 minutos em forno \nmÃ©dio . Caso nÃ£o queira tranÃ§ar e prefira colocar a \nmassa cobrindo toda a torta, faÃ§a furos com um garfo, \nassim vocÃª evita uma explosÃ£o no forno e uma sujeira \nna cozinha =)\n\nPizza na frigideira\n\nPizza na frigideira	\nâ€¢	Ingredientes	\nâ€¢	2 1/2 xÃ­caras de farinha de trigo	\nâ€¢	1 colher de manteiga	\nâ€¢	1 colher pequena de sal	\nâ€¢	1 copo de leite morno\n\nModo de Preparo	\nâ€¢	Misturar tudo em uma travessa com as mÃ£os	\nâ€¢	Caso nÃ£o encontre o ponto certo, adicione mais farinha atÃ© desgrudar \na massa das mÃ£os	\nâ€¢	Separar 4 bolinhas de massa	\nâ€¢	Abri	-las separadamente na frigideira	\nâ€¢	Assar somente um lado atÃ© o ponto desejado	\nâ€¢	Virar a massa	\nâ€¢	Desligar o fogo	\nâ€¢	Colocar molho de tomate	\nâ€¢	Cobrir o molho com mussarela, rodelas de tomate e orÃ©gano	\nâ€¢	Assar agora o outro lado	\nâ€¢	Tampe para que o queijo derreta\n\nPizza rÃ¡pida de liquidificador\n\nINGREDIENTES 	-	MASSA	\nâ€¢	* 	xÃ­cara medida de 240ml	\n1/2 xÃ­cara (chÃ¡) de leite morno \n1 ovo \n1 tablete de fermento para pÃ£o ou uma colher de sopa de \nfermento biolÃ³gico seco instantÃ¢neo \n1 colher (sobremesa) de aÃ§Ãºcar \n1 colher (chÃ¡) de sal \n1/2 xÃ­cara (chÃ¡) de Ã³leo \n2 1/2 xÃ­cara (chÃ¡) de farinha de trigo\n\nINGREDIENTES 	-	RECHEIO	\nâ€¢	1 lata de milho verde \n1 cebola bem picada \n1 	porcao	de queijo mussarela ralado 	\n1 lata de creme de leite ou 	requeijao	cremoso 	\nTemperos a gosto\n\nMODO DE FAZER	\nâ€¢	No copo do liquidificador, coloque o leite morno, o ovo, \no fermento esfarelado, o aÃ§Ãºcar, o sal e o Ã³leo. Bata. \nDesligue e acrescente a farinha aos poucos, batendo \nsempre que for acrescentada. Coloque em assadeira \n(nÃ£o precisa untar). Sobre a massa espalhe o recheio. \nLeve ao forno a 180ÂºC por uns 30 min.\n\nCoxinha FÃ¡cil\n\nMassa:	\nâ€¢	1 kg de farinha de trigo	\nâ€¢	1 caldo de galinha	\nâ€¢	7 copos de Ã¡gua fervendo	\nâ€¢	1 copo de Ã³leo	\nâ€¢	1 copo de Ã¡gua fria\n\nRecheio:	\nâ€¢	1 peito de frango (aproximadamente 1 Kg)	\nâ€¢	Colorau	\nâ€¢	Tempero a gosto\n\nEmpanar:	\nâ€¢	Ovo	\nâ€¢	1 xÃ­cara de leite (ou Ã¡gua)	\nâ€¢	1/2 kg de farinha de rosca\n\nMassa 	facil	e gostosa para 	coxinha 	\ne 	risole\n\nMassa	\nâ€¢	ingredientes	\nâ€¢	250 ml de leite\n250 ml de 	agua	\n02 cubos de caldo sabor galinha\n02 colheres de manteiga ou margarina\n02 copos americano de farinha de trigo\n\nModo de preparo	\nâ€¢	Colocar o leite e a Ã¡gua para aquecer, acrescentar os \ncubos de caldo de galinha e a manteiga, e deixar ferver.\nAssim que comeÃ§ar a ferver acrescentar a farinha e ir \nmexendo sem parar (nÃ£o fica em pelotada). Deixar a \nmassa cozinhar por 05 minutos mexendo sempre.\n\nEsfiha	Aberta de Carne\n\ningredientes	\nâ€¢	Montagem 	\nâ€¢	1 tablete(s) de fermento biolÃ³gico fresco \n180 ml de Ã¡gua morno(a) \n1/2 copo(s) de Ã³leo de soja \n500 	gr	de farinha de trigo 	\n1 colher(	es	) (sobremesa) de sal 	\n1 colher(	es	) (sobremesa) de aÃ§Ãºcar\n\nRecheio	\nâ€¢	1/2 unidade(s) de 	cebola picada(s)	\n250 	gr	de patinho moÃ­do(s) 	\n1/2 unidade(s) de limÃ£o espremido(s) \nquanto baste de pimenta sÃ­ria \n1 unidade(s) de tomate picado(s), sem pele(s), sem \nsementes \nquanto baste de sal \nquanto baste de cheiro	-verde\n\nModo de preparo	\nâ€¢	Montagem 	\nâ€¢	Em uma tigela dissolva o fermento no aÃ§Ãºcar e acrescente \nos demais ingredientes. A farinha de trigo Ã© acrescentada \npor Ãºltimo, e se coloca o suficiente para formar uma \nmassa bem macia, ainda pegajosa. Forme bolinhas com a \nmassa. VÃ¡ apertando com as pontas dos dedos, formando \nesfihas	(lembre	-se que a borda Ã© mais grossa que o 	\ncentro). Deixe descansando por 20 minutos (o recheio jÃ¡ \ndeve estar pronto).\n\nRecheio	\nâ€¢	Tempere a carne com todos os temperos. Deixe \ndescansar por meia hora. ApÃ³s esse tempo, coloque \nnuma peneira e deixe mais duas horas para que a \ncarne pingue o suco e fique bem sequinha. Recheie as \nesfihas	com a carne. Asse em forma enfarinhada, mas 	\nsem 	untar	em forno a 180ÂºC, atÃ© que estejam douradas 	\ne que a carne fique cozida	.\n\nBolinho boliviano\n\nIngredientes: 	\nâ€¢	MASSA	\nâ€¢	2 xÃ­caras (chÃ¡) de leite\n1/2 xÃ­cara (chÃ¡) de manteiga\n2 xÃ­caras (chÃ¡) de farinha de trigo\nSal a gosto\n\nRECHEIO	\n2 colheres (sopa) de Ã³leo\n1 cebola pequena picada\n1 dente de alho\n1 colher de 	cha	de pimenta 	dedo	-de	-moÃ§a	ou molho de 	\npimenta\n1 colher sobremesa	de cheiro verde	\n200 g de carne moÃ­da	\nâ…“	xÃ­cara (chÃ¡) de uvas	-passas	\nSal	a gosto\n\nPARA FRITAR	\nâ€¢	1	ovos ligeiramente batidos	\nâ€¢	1 xÃ­cara de Ã¡gua\n1 Â½ xÃ­cara (chÃ¡) de farinha de rosca\n\nPARA POLVILHAR	\nâ€¢	1 xÃ­cara (	cha	) de aÃ§Ãºcar	\n1 colher (sopa) de canela em pÃ³\n\nMODO DE PREPARAR:	\nâ€¢	Numa panela, coloque o leite, a manteiga e o sal \ne leve ao fogo. Quando levantar fervura, junte a \nfarinha de trigo de uma sÃ³ vez e mexa atÃ© \ndesgrudar do fundo da panela. Retire do fogo \ncubra com um pano seco e limpo e deixe \nesfriar... Reserve. 	\nâ€¢	Em uma tigela tempere a carne com o alho, o \ncheiro verde, o sal e a pimenta.\n\nâ€¢	Em outra	panela prepare o recheio, refogue no Ã³leo, a 	\ncebola atÃ© dourar. Junte a carne e cozinhe com a \nprÃ³pria Ã¡gua que soltara dela, e espere	a carne 	\nsecar,	deixe esfriar e adicione as uvas passas. Coloque 	\num pouco do recheio no centro da massa e feche, \napertando bem as bordas formando bolinhas. Misture o \novo com a Ã¡gua e passe as bolinha nessa mistura e \ndepois na farinha de rosca.\n\nâ€¢	Numa frigideira com Ã³leo quente frite aos poucos. \nRetire com uma escumadeira deixe escorrer o Ã³leo,	em 	\nseguida	passe no aÃ§Ãºcar misturado com a canela. Sirva 	\nem seguida.');

-- --------------------------------------------------------


--
-- Indexes for dumped tables
--

--
-- Indexes for table `files`
--
ALTER TABLE `files`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`email`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `files`
--
ALTER TABLE `files`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=11;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
